{"ast":null,"code":"import React from\"react\";import TimelineItem from\"./TimelineItem\";import TimelineHeader from\"./TimelineHeader\";import Resume from\"../../resume.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Timeline(){var active=window.screen.width<768;return/*#__PURE__*/_jsxs(\"div\",{className:\"timeline \".concat(active?\"is-left\":\"is-centered\"),children:[/*#__PURE__*/_jsx(\"header\",{className:\"timeline-header\",children:/*#__PURE__*/_jsx(\"span\",{className:\"tag is-medium is-dark\",children:new Date().getFullYear()})}),/*#__PURE__*/_jsxs(\"div\",{className:\"timeline-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"timeline-marker is-success\"}),/*#__PURE__*/_jsx(\"div\",{className:\"timeline-content\"})]}),Resume.work.map(function(item){return new Date(item.startDate).getFullYear();}).filter(function(value,index,self){return self.indexOf(value)===index;}).map(function(year,i){var content=[];content.push(/*#__PURE__*/_jsx(TimelineHeader,{year:year},i));content.push(Resume.work.filter(function(work){return new Date(work.startDate).getFullYear()===year;}).map(function(item,j){return/*#__PURE__*/_jsx(TimelineItem,{image:item.image,date:new Date(item.startDate).toLocaleString(\"en-UK\",{month:\"long\",year:\"numeric\"}),company:item.company,summary:item.summary,summary1:item.summary1,summary2:item.summary2,position:item.position,website:item.website,endDate:item.endDate,badge:item.highlights,expIndex:item.index},j);}));return content;})]});}export default Timeline;","map":{"version":3,"sources":["/home/dhruva/DhruvaBansal00.github.io/src/components/elements/Timeline.js"],"names":["React","TimelineItem","TimelineHeader","Resume","Timeline","active","window","screen","width","Date","getFullYear","work","map","item","startDate","filter","value","index","self","indexOf","year","i","content","push","j","image","toLocaleString","month","company","summary","summary1","summary2","position","website","endDate","highlights"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,wFAEA,QAASC,CAAAA,QAAT,EAAoB,CAClB,GAAIC,CAAAA,MAAM,CAAGC,MAAM,CAACC,MAAP,CAAcC,KAAd,CAAsB,GAAnC,CACA,mBACE,aAAK,SAAS,oBAAcH,MAAM,CAAG,SAAH,CAAe,aAAnC,CAAd,wBACA,eAAQ,SAAS,CAAC,iBAAlB,uBACA,aAAM,SAAS,CAAC,uBAAhB,UACG,GAAII,CAAAA,IAAJ,GAAWC,WAAX,EADH,EADA,EADA,cAMF,aAAK,SAAS,CAAC,eAAf,wBACE,YAAK,SAAS,CAAC,4BAAf,EADF,cAEE,YAAK,SAAS,CAAC,kBAAf,EAFF,GANE,CAUDP,MAAM,CAACQ,IAAP,CACEC,GADF,CACM,SAAAC,IAAI,CAAI,CACX,MAAO,IAAIJ,CAAAA,IAAJ,CAASI,IAAI,CAACC,SAAd,EAAyBJ,WAAzB,EAAP,CACD,CAHF,EAGIK,MAHJ,CAGW,SAACC,KAAD,CAAQC,KAAR,CAAeC,IAAf,QAAwBA,CAAAA,IAAI,CAACC,OAAL,CAAaH,KAAb,IAAwBC,KAAhD,EAHX,EAIEL,GAJF,CAIM,SAACQ,IAAD,CAAOC,CAAP,CAAa,CAChB,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACAA,OAAO,CAACC,IAAR,cACE,KAAC,cAAD,EAAwB,IAAI,CAAEH,IAA9B,EAAqBC,CAArB,CADF,EAGAC,OAAO,CAACC,IAAR,CACEpB,MAAM,CAACQ,IAAP,CACGI,MADH,CACU,SAAAJ,IAAI,QAAI,IAAIF,CAAAA,IAAJ,CAASE,IAAI,CAACG,SAAd,EAAyBJ,WAAzB,KAA2CU,IAA/C,EADd,EAEGR,GAFH,CAEO,SAACC,IAAD,CAAOW,CAAP,CAAa,CAChB,mBACE,KAAC,YAAD,EAEE,KAAK,CAAEX,IAAI,CAACY,KAFd,CAGE,IAAI,CAAE,GAAIhB,CAAAA,IAAJ,CAASI,IAAI,CAACC,SAAd,EAAyBY,cAAzB,CAAwC,OAAxC,CAAiD,CACrDC,KAAK,CAAE,MAD8C,CAErDP,IAAI,CAAE,SAF+C,CAAjD,CAHR,CAOE,OAAO,CAAEP,IAAI,CAACe,OAPhB,CAQE,OAAO,CAAEf,IAAI,CAACgB,OARhB,CASE,QAAQ,CAAEhB,IAAI,CAACiB,QATjB,CAUE,QAAQ,CAAEjB,IAAI,CAACkB,QAVjB,CAWE,QAAQ,CAAElB,IAAI,CAACmB,QAXjB,CAYE,OAAO,CAAEnB,IAAI,CAACoB,OAZhB,CAaE,OAAO,CAAEpB,IAAI,CAACqB,OAbhB,CAcE,KAAK,CAAErB,IAAI,CAACsB,UAdd,CAeE,QAAQ,CAAEtB,IAAI,CAACI,KAfjB,EACOO,CADP,CADF,CAmBD,CAtBH,CADF,EAyBA,MAAOF,CAAAA,OAAP,CACD,CAnCF,CAVC,GADF,CAiDD,CAED,cAAelB,CAAAA,QAAf","sourcesContent":["import React from \"react\";\nimport TimelineItem from \"./TimelineItem\";\nimport TimelineHeader from \"./TimelineHeader\";\nimport Resume from \"../../resume.json\";\n\nfunction Timeline() {\n  let active = window.screen.width < 768;\n  return (\n    <div className={`timeline ${active ? \"is-left\" : \"is-centered\"}`}>    \n    <header className=\"timeline-header\">\n    <span className=\"tag is-medium is-dark\">\n      {new Date().getFullYear()}\n    </span>\n  </header>\n  <div className=\"timeline-item\">\n    <div className=\"timeline-marker is-success\"></div>\n    <div className=\"timeline-content\"></div>\n  </div>\n  {Resume.work\n    .map(item => {\n      return new Date(item.startDate).getFullYear();\n    }).filter((value, index, self) => self.indexOf(value) === index)\n    .map((year, i) => {\n      let content = [];\n      content.push(\n        <TimelineHeader key={i} year={year}/>\n      );\n      content.push(\n        Resume.work\n          .filter(work => new Date(work.startDate).getFullYear() === year)\n          .map((item, j) => {\n            return (\n              <TimelineItem\n                key={j}\n                image={item.image}\n                date={new Date(item.startDate).toLocaleString(\"en-UK\", {\n                  month: \"long\",\n                  year: \"numeric\"\n                })}\n                company={item.company}\n                summary={item.summary}\n                summary1={item.summary1}\n                summary2={item.summary2}\n                position={item.position}\n                website={item.website}\n                endDate={item.endDate}\n                badge={item.highlights}\n                expIndex={item.index}\n              />\n            );\n          })\n      );\n      return content;\n    })}\n    </div>\n  );\n}\n\nexport default Timeline;\n"]},"metadata":{},"sourceType":"module"}