{"ast":null,"code":"var _jsxFileName = \"/home/dhruva/Desktop/DhruvaBansal00.github.io/src/components/elements/Timeline.js\";\nimport React from \"react\";\nimport TimelineItem from \"./TimelineItem\";\nimport TimelineHeader from \"./TimelineHeader\";\nimport Resume from \"../../resume.json\";\n\nfunction Timeline() {\n  let active = window.screen.width < 768;\n  return (// <div {{window.screen.width < 768 ? \"className='timeline is-left'\" : \"className='timeline is-centered'\"}}>\n    React.createElement(\"div\", {\n      className: \"timeline \".concat(active ? \"is-left\" : \"is-right\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"timeline-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"tag is-medium is-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, new Date().getFullYear())), React.createElement(\"div\", {\n      className: \"timeline-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"timeline-marker is-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"timeline-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })), Resume.work.map(item => {\n      return new Date(item.startDate).getFullYear();\n    }).filter((value, index, self) => self.indexOf(value) === index).map((year, i) => {\n      let content = [];\n      content.push(React.createElement(TimelineHeader, {\n        key: i,\n        year: year,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }));\n      content.push(Resume.work.filter(work => new Date(work.startDate).getFullYear() === year).map((item, j) => {\n        return React.createElement(TimelineItem, {\n          key: j,\n          image: item.image,\n          date: new Date(item.startDate).toLocaleString(\"en-UK\", {\n            month: \"long\",\n            year: \"numeric\"\n          }),\n          company: item.company,\n          summary: item.summary,\n          position: item.position,\n          website: item.website,\n          endDate: item.endDate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      }));\n      return content;\n    }))\n  );\n}\n\nexport default Timeline;","map":{"version":3,"sources":["/home/dhruva/Desktop/DhruvaBansal00.github.io/src/components/elements/Timeline.js"],"names":["React","TimelineItem","TimelineHeader","Resume","Timeline","active","window","screen","width","Date","getFullYear","work","map","item","startDate","filter","value","index","self","indexOf","year","i","content","push","j","image","toLocaleString","month","company","summary","position","website","endDate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,SAASC,QAAT,GAAoB;AAClB,MAAIC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAcC,KAAd,GAAsB,GAAnC;AACA,SACE;AACA;AAAK,MAAA,SAAS,qBAAcH,MAAM,GAAG,SAAH,GAAe,UAAnC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAM,MAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,IAAII,IAAJ,GAAWC,WAAX,EADH,CADA,CADA,EAMF;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CANE,EAUDP,MAAM,CAACQ,IAAP,CACEC,GADF,CACMC,IAAI,IAAI;AACX,aAAO,IAAIJ,IAAJ,CAASI,IAAI,CAACC,SAAd,EAAyBJ,WAAzB,EAAP;AACD,KAHF,EAGIK,MAHJ,CAGW,CAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf,KAAwBA,IAAI,CAACC,OAAL,CAAaH,KAAb,MAAwBC,KAH3D,EAIEL,GAJF,CAIM,CAACQ,IAAD,EAAOC,CAAP,KAAa;AAChB,UAAIC,OAAO,GAAG,EAAd;AACAA,MAAAA,OAAO,CAACC,IAAR,CACE,oBAAC,cAAD;AAAgB,QAAA,GAAG,EAAEF,CAArB;AAAwB,QAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGAE,MAAAA,OAAO,CAACC,IAAR,CACEpB,MAAM,CAACQ,IAAP,CACGI,MADH,CACUJ,IAAI,IAAI,IAAIF,IAAJ,CAASE,IAAI,CAACG,SAAd,EAAyBJ,WAAzB,OAA2CU,IAD7D,EAEGR,GAFH,CAEO,CAACC,IAAD,EAAOW,CAAP,KAAa;AAChB,eACE,oBAAC,YAAD;AACE,UAAA,GAAG,EAAEA,CADP;AAEE,UAAA,KAAK,EAAEX,IAAI,CAACY,KAFd;AAGE,UAAA,IAAI,EAAE,IAAIhB,IAAJ,CAASI,IAAI,CAACC,SAAd,EAAyBY,cAAzB,CAAwC,OAAxC,EAAiD;AACrDC,YAAAA,KAAK,EAAE,MAD8C;AAErDP,YAAAA,IAAI,EAAE;AAF+C,WAAjD,CAHR;AAOE,UAAA,OAAO,EAAEP,IAAI,CAACe,OAPhB;AAQE,UAAA,OAAO,EAAEf,IAAI,CAACgB,OARhB;AASE,UAAA,QAAQ,EAAEhB,IAAI,CAACiB,QATjB;AAUE,UAAA,OAAO,EAAEjB,IAAI,CAACkB,OAVhB;AAWE,UAAA,OAAO,EAAElB,IAAI,CAACmB,OAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,OAlBH,CADF;AAqBA,aAAOV,OAAP;AACD,KA/BF,CAVC;AAFF;AA8CD;;AAED,eAAelB,QAAf","sourcesContent":["import React from \"react\";\nimport TimelineItem from \"./TimelineItem\";\nimport TimelineHeader from \"./TimelineHeader\";\nimport Resume from \"../../resume.json\";\n\nfunction Timeline() {\n  let active = window.screen.width < 768;\n  return (\n    // <div {{window.screen.width < 768 ? \"className='timeline is-left'\" : \"className='timeline is-centered'\"}}>\n    <div className={`timeline ${active ? \"is-left\" : \"is-right\"}`}>\n    <header className=\"timeline-header\">\n    <span className=\"tag is-medium is-dark\">\n      {new Date().getFullYear()}\n    </span>\n  </header>\n  <div className=\"timeline-item\">\n    <div className=\"timeline-marker is-success\"></div>\n    <div className=\"timeline-content\"></div>\n  </div>\n  {Resume.work\n    .map(item => {\n      return new Date(item.startDate).getFullYear();\n    }).filter((value, index, self) => self.indexOf(value) === index)\n    .map((year, i) => {\n      let content = [];\n      content.push(\n        <TimelineHeader key={i} year={year}/>\n      );\n      content.push(\n        Resume.work\n          .filter(work => new Date(work.startDate).getFullYear() === year)\n          .map((item, j) => {\n            return (\n              <TimelineItem\n                key={j}\n                image={item.image}\n                date={new Date(item.startDate).toLocaleString(\"en-UK\", {\n                  month: \"long\",\n                  year: \"numeric\"\n                })}\n                company={item.company}\n                summary={item.summary}\n                position={item.position}\n                website={item.website}\n                endDate={item.endDate}\n              />\n            );\n          })\n      );\n      return content;\n    })}\n    </div>\n  );\n}\n\nexport default Timeline;\n"]},"metadata":{},"sourceType":"module"}