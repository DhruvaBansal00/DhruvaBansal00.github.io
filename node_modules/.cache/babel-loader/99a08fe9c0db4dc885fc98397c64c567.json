{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nimport appendImportantToEachValue from './append-important-to-each-value';\nimport cssRuleSetToString from './css-rule-set-to-string';\nimport getState from './get-state';\nimport getStateKey from './get-state-key';\nimport cleanStateKey from './clean-state-key';\nimport getRadiumStyleState from './get-radium-style-state';\nimport hash from './hash';\nimport { isNestedStyle, mergeStyles } from './merge-styles';\nimport Plugins from './plugins/';\nimport ExecutionEnvironment from 'exenv';\nimport React from 'react';\nvar DEFAULT_CONFIG = {\n  plugins: [Plugins.mergeStyleArray, Plugins.checkProps, Plugins.resolveMediaQueries, Plugins.resolveInteractionStyles, Plugins.keyframes, Plugins.visited, Plugins.removeNestedStyles, Plugins.prefix, Plugins.checkProps]\n}; // Gross\n\nvar globalState = {}; // Declare early for recursive helpers.\n\nvar _resolveStyles5 = null;\n\nvar _shouldResolveStyles = function _shouldResolveStyles(component) {\n  return component.type && !component.type._isRadiumEnhanced;\n};\n\nvar _resolveChildren = function _resolveChildren(_ref) {\n  var children = _ref.children,\n      component = _ref.component,\n      config = _ref.config,\n      existingKeyMap = _ref.existingKeyMap,\n      extraStateKeyMap = _ref.extraStateKeyMap;\n\n  if (!children) {\n    return children;\n  }\n\n  var childrenType = typeof children === 'undefined' ? 'undefined' : _typeof(children);\n\n  if (childrenType === 'string' || childrenType === 'number') {\n    // Don't do anything with a single primitive child\n    return children;\n  }\n\n  if (childrenType === 'function') {\n    // Wrap the function, resolving styles on the result\n    return function () {\n      var result = children.apply(this, arguments);\n\n      if (React.isValidElement(result)) {\n        var _key = getStateKey(result);\n\n        delete extraStateKeyMap[_key];\n\n        var _resolveStyles = _resolveStyles5(component, result, config, existingKeyMap, true, extraStateKeyMap),\n            _element = _resolveStyles.element;\n\n        return _element;\n      }\n\n      return result;\n    };\n  }\n\n  if (React.Children.count(children) === 1 && children.type) {\n    // If a React Element is an only child, don't wrap it in an array for\n    // React.Children.map() for React.Children.only() compatibility.\n    var onlyChild = React.Children.only(children);\n\n    var _key2 = getStateKey(onlyChild);\n\n    delete extraStateKeyMap[_key2];\n\n    var _resolveStyles2 = _resolveStyles5(component, onlyChild, config, existingKeyMap, true, extraStateKeyMap),\n        _element2 = _resolveStyles2.element;\n\n    return _element2;\n  }\n\n  return React.Children.map(children, function (child) {\n    if (React.isValidElement(child)) {\n      var _key3 = getStateKey(child);\n\n      delete extraStateKeyMap[_key3];\n\n      var _resolveStyles3 = _resolveStyles5(component, child, config, existingKeyMap, true, extraStateKeyMap),\n          _element3 = _resolveStyles3.element;\n\n      return _element3;\n    }\n\n    return child;\n  });\n}; // Recurse over props, just like children\n\n\nvar _resolveProps = function _resolveProps(_ref2) {\n  var component = _ref2.component,\n      config = _ref2.config,\n      existingKeyMap = _ref2.existingKeyMap,\n      props = _ref2.props,\n      extraStateKeyMap = _ref2.extraStateKeyMap;\n  var newProps = props;\n  Object.keys(props).forEach(function (prop) {\n    // We already recurse over children above\n    if (prop === 'children') {\n      return;\n    }\n\n    var propValue = props[prop];\n\n    if (React.isValidElement(propValue)) {\n      var _key4 = getStateKey(propValue);\n\n      delete extraStateKeyMap[_key4];\n      newProps = _extends({}, newProps);\n\n      var _resolveStyles4 = _resolveStyles5(component, propValue, config, existingKeyMap, true, extraStateKeyMap),\n          _element4 = _resolveStyles4.element;\n\n      newProps[prop] = _element4;\n    }\n  });\n  return newProps;\n};\n\nvar _buildGetKey = function _buildGetKey(_ref3) {\n  var componentName = _ref3.componentName,\n      existingKeyMap = _ref3.existingKeyMap,\n      renderedElement = _ref3.renderedElement; // We need a unique key to correlate state changes due to user interaction\n  // with the rendered element, so we know to apply the proper interactive\n  // styles.\n\n  var originalKey = getStateKey(renderedElement);\n  var key = cleanStateKey(originalKey);\n  var alreadyGotKey = false;\n\n  var getKey = function getKey() {\n    if (alreadyGotKey) {\n      return key;\n    }\n\n    alreadyGotKey = true;\n\n    if (existingKeyMap[key]) {\n      var elementName = void 0;\n\n      if (typeof renderedElement.type === 'string') {\n        elementName = renderedElement.type;\n      } else if (renderedElement.type.constructor) {\n        elementName = renderedElement.type.constructor.displayName || renderedElement.type.constructor.name;\n      }\n\n      throw new Error('Radium requires each element with interactive styles to have a unique ' + 'key, set using either the ref or key prop. ' + (originalKey ? 'Key \"' + originalKey + '\" is a duplicate.' : 'Multiple elements have no key specified.') + ' ' + 'Component: \"' + componentName + '\". ' + (elementName ? 'Element: \"' + elementName + '\".' : ''));\n    }\n\n    existingKeyMap[key] = true;\n    return key;\n  };\n\n  return getKey;\n};\n\nvar _setStyleState = function _setStyleState(component, key, stateKey, value) {\n  if (!component._radiumIsMounted) {\n    return;\n  }\n\n  var existing = getRadiumStyleState(component);\n  var state = {\n    _radiumStyleState: _extends({}, existing)\n  };\n  state._radiumStyleState[key] = _extends({}, state._radiumStyleState[key]);\n  state._radiumStyleState[key][stateKey] = value;\n  component._lastRadiumState = state._radiumStyleState;\n  component.setState(state);\n};\n\nvar _runPlugins = function _runPlugins(_ref4) {\n  var component = _ref4.component,\n      config = _ref4.config,\n      existingKeyMap = _ref4.existingKeyMap,\n      props = _ref4.props,\n      renderedElement = _ref4.renderedElement; // Don't run plugins if renderedElement is not a simple ReactDOMElement or has\n  // no style.\n\n  if (!React.isValidElement(renderedElement) || typeof renderedElement.type !== 'string' || !props.style) {\n    return props;\n  }\n\n  var newProps = props;\n  var plugins = config.plugins || DEFAULT_CONFIG.plugins;\n  var componentName = component.constructor.displayName || component.constructor.name;\n\n  var getKey = _buildGetKey({\n    renderedElement: renderedElement,\n    existingKeyMap: existingKeyMap,\n    componentName: componentName\n  });\n\n  var getComponentField = function getComponentField(key) {\n    return component[key];\n  };\n\n  var getGlobalState = function getGlobalState(key) {\n    return globalState[key];\n  };\n\n  var componentGetState = function componentGetState(stateKey, elementKey) {\n    return getState(component.state, elementKey || getKey(), stateKey);\n  };\n\n  var setState = function setState(stateKey, value, elementKey) {\n    return _setStyleState(component, elementKey || getKey(), stateKey, value);\n  };\n\n  var addCSS = function addCSS(css) {\n    var styleKeeper = component._radiumStyleKeeper || component.context._radiumStyleKeeper;\n\n    if (!styleKeeper) {\n      if (__isTestModeEnabled) {\n        return {\n          remove: function remove() {}\n        };\n      }\n\n      throw new Error('To use plugins requiring `addCSS` (e.g. keyframes, media queries), ' + 'please wrap your application in the StyleRoot component. Component ' + 'name: `' + componentName + '`.');\n    }\n\n    return styleKeeper.addCSS(css);\n  };\n\n  var newStyle = props.style;\n  plugins.forEach(function (plugin) {\n    var result = plugin({\n      ExecutionEnvironment: ExecutionEnvironment,\n      addCSS: addCSS,\n      appendImportantToEachValue: appendImportantToEachValue,\n      componentName: componentName,\n      config: config,\n      cssRuleSetToString: cssRuleSetToString,\n      getComponentField: getComponentField,\n      getGlobalState: getGlobalState,\n      getState: componentGetState,\n      hash: hash,\n      mergeStyles: mergeStyles,\n      props: newProps,\n      setState: setState,\n      isNestedStyle: isNestedStyle,\n      style: newStyle\n    }) || {};\n    newStyle = result.style || newStyle;\n    newProps = result.props && Object.keys(result.props).length ? _extends({}, newProps, result.props) : newProps;\n    var newComponentFields = result.componentFields || {};\n    Object.keys(newComponentFields).forEach(function (fieldName) {\n      component[fieldName] = newComponentFields[fieldName];\n    });\n    var newGlobalState = result.globalState || {};\n    Object.keys(newGlobalState).forEach(function (key) {\n      globalState[key] = newGlobalState[key];\n    });\n  });\n\n  if (newStyle !== props.style) {\n    newProps = _extends({}, newProps, {\n      style: newStyle\n    });\n  }\n\n  return newProps;\n}; // Wrapper around React.cloneElement. To avoid processing the same element\n// twice, whenever we clone an element add a special prop to make sure we don't\n// process this element again.\n\n\nvar _cloneElement = function _cloneElement(renderedElement, newProps, newChildren) {\n  // Only add flag if this is a normal DOM element\n  if (typeof renderedElement.type === 'string') {\n    newProps = _extends({}, newProps, {\n      'data-radium': true\n    });\n  }\n\n  return React.cloneElement(renderedElement, newProps, newChildren);\n}; //\n// The nucleus of Radium. resolveStyles is called on the rendered elements\n// before they are returned in render. It iterates over the elements and\n// children, rewriting props to add event handlers required to capture user\n// interactions (e.g. mouse over). It also replaces the style prop because it\n// adds in the various interaction styles (e.g. :hover).\n//\n\n/* eslint-disable max-params */\n\n\n_resolveStyles5 = function resolveStyles(component, // ReactComponent, flow+eslint complaining\nrenderedElement) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_CONFIG;\n  var existingKeyMap = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var shouldCheckBeforeResolve = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var extraStateKeyMap = arguments[5]; // The extraStateKeyMap is for determining which keys should be erased from\n  // the state (i.e. which child components are unmounted and should no longer\n  // have a style state).\n\n  if (!extraStateKeyMap) {\n    var state = getRadiumStyleState(component);\n    extraStateKeyMap = Object.keys(state).reduce(function (acc, key) {\n      // 'main' is the auto-generated key when there is only one element with\n      // interactive styles and if a custom key is not assigned. Because of\n      // this, it is impossible to know which child is 'main', so we won't\n      // count this key when generating our extraStateKeyMap.\n      if (key !== 'main') {\n        acc[key] = true;\n      }\n\n      return acc;\n    }, {});\n  }\n\n  if (Array.isArray(renderedElement) && !renderedElement.props) {\n    var elements = renderedElement.map(function (element) {\n      // element is in-use, so remove from the extraStateKeyMap\n      if (extraStateKeyMap) {\n        var _key5 = getStateKey(element);\n\n        delete extraStateKeyMap[_key5];\n      } // this element is an array of elements,\n      // so return an array of elements with resolved styles\n\n\n      return _resolveStyles5(component, element, config, existingKeyMap, shouldCheckBeforeResolve, extraStateKeyMap).element;\n    });\n    return {\n      extraStateKeyMap: extraStateKeyMap,\n      element: elements\n    };\n  } // ReactElement\n\n\n  if (!renderedElement || // Bail if we've already processed this element. This ensures that only the\n  // owner of an element processes that element, since the owner's render\n  // function will be called first (which will always be the case, since you\n  // can't know what else to render until you render the parent component).\n  renderedElement.props && renderedElement.props['data-radium'] || // Bail if this element is a radium enhanced element, because if it is,\n  // then it will take care of resolving its own styles.\n  shouldCheckBeforeResolve && !_shouldResolveStyles(renderedElement)) {\n    return {\n      extraStateKeyMap: extraStateKeyMap,\n      element: renderedElement\n    };\n  }\n\n  var children = renderedElement.props.children;\n\n  var newChildren = _resolveChildren({\n    children: children,\n    component: component,\n    config: config,\n    existingKeyMap: existingKeyMap,\n    extraStateKeyMap: extraStateKeyMap\n  });\n\n  var newProps = _resolveProps({\n    component: component,\n    config: config,\n    existingKeyMap: existingKeyMap,\n    extraStateKeyMap: extraStateKeyMap,\n    props: renderedElement.props\n  });\n\n  newProps = _runPlugins({\n    component: component,\n    config: config,\n    existingKeyMap: existingKeyMap,\n    props: newProps,\n    renderedElement: renderedElement\n  }); // If nothing changed, don't bother cloning the element. Might be a bit\n  // wasteful, as we add the sentinel to stop double-processing when we clone.\n  // Assume benign double-processing is better than unneeded cloning.\n\n  if (newChildren === children && newProps === renderedElement.props) {\n    return {\n      extraStateKeyMap: extraStateKeyMap,\n      element: renderedElement\n    };\n  }\n\n  var element = _cloneElement(renderedElement, newProps !== renderedElement.props ? newProps : {}, newChildren);\n\n  return {\n    extraStateKeyMap: extraStateKeyMap,\n    element: element\n  };\n};\n/* eslint-enable max-params */\n// Only for use by tests\n\n\nvar __isTestModeEnabled = false;\n\nif (process.env.NODE_ENV !== 'production') {\n  _resolveStyles5.__clearStateForTests = function () {\n    globalState = {};\n  };\n\n  _resolveStyles5.__setTestMode = function (isEnabled) {\n    __isTestModeEnabled = isEnabled;\n  };\n}\n\nexport default _resolveStyles5;","map":{"version":3,"sources":["/home/dhruva/Desktop/DhruvaBansal00.github.io/node_modules/radium/es/resolve-styles.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_typeof","Symbol","iterator","obj","constructor","appendImportantToEachValue","cssRuleSetToString","getState","getStateKey","cleanStateKey","getRadiumStyleState","hash","isNestedStyle","mergeStyles","Plugins","ExecutionEnvironment","React","DEFAULT_CONFIG","plugins","mergeStyleArray","checkProps","resolveMediaQueries","resolveInteractionStyles","keyframes","visited","removeNestedStyles","prefix","globalState","_resolveStyles5","_shouldResolveStyles","component","type","_isRadiumEnhanced","_resolveChildren","_ref","children","config","existingKeyMap","extraStateKeyMap","childrenType","result","apply","isValidElement","_key","_resolveStyles","_element","element","Children","count","onlyChild","only","_key2","_resolveStyles2","_element2","map","child","_key3","_resolveStyles3","_element3","_resolveProps","_ref2","props","newProps","keys","forEach","prop","propValue","_key4","_resolveStyles4","_element4","_buildGetKey","_ref3","componentName","renderedElement","originalKey","alreadyGotKey","getKey","elementName","displayName","name","Error","_setStyleState","stateKey","value","_radiumIsMounted","existing","state","_radiumStyleState","_lastRadiumState","setState","_runPlugins","_ref4","style","getComponentField","getGlobalState","componentGetState","elementKey","addCSS","css","styleKeeper","_radiumStyleKeeper","context","__isTestModeEnabled","remove","newStyle","plugin","newComponentFields","componentFields","fieldName","newGlobalState","_cloneElement","newChildren","cloneElement","resolveStyles","undefined","shouldCheckBeforeResolve","reduce","acc","Array","isArray","elements","_key5","process","env","NODE_ENV","__clearStateForTests","__setTestMode","isEnabled"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nimport appendImportantToEachValue from './append-important-to-each-value';\n\nimport cssRuleSetToString from './css-rule-set-to-string';\nimport getState from './get-state';\nimport getStateKey from './get-state-key';\nimport cleanStateKey from './clean-state-key';\nimport getRadiumStyleState from './get-radium-style-state';\nimport hash from './hash';\nimport { isNestedStyle, mergeStyles } from './merge-styles';\nimport Plugins from './plugins/';\n\nimport ExecutionEnvironment from 'exenv';\nimport React from 'react';\n\nvar DEFAULT_CONFIG = {\n  plugins: [Plugins.mergeStyleArray, Plugins.checkProps, Plugins.resolveMediaQueries, Plugins.resolveInteractionStyles, Plugins.keyframes, Plugins.visited, Plugins.removeNestedStyles, Plugins.prefix, Plugins.checkProps]\n};\n\n// Gross\nvar globalState = {};\n\n// Declare early for recursive helpers.\nvar _resolveStyles5 = null;\n\nvar _shouldResolveStyles = function _shouldResolveStyles(component) {\n  return component.type && !component.type._isRadiumEnhanced;\n};\n\nvar _resolveChildren = function _resolveChildren(_ref) {\n  var children = _ref.children,\n      component = _ref.component,\n      config = _ref.config,\n      existingKeyMap = _ref.existingKeyMap,\n      extraStateKeyMap = _ref.extraStateKeyMap;\n\n  if (!children) {\n    return children;\n  }\n\n  var childrenType = typeof children === 'undefined' ? 'undefined' : _typeof(children);\n\n  if (childrenType === 'string' || childrenType === 'number') {\n    // Don't do anything with a single primitive child\n    return children;\n  }\n\n  if (childrenType === 'function') {\n    // Wrap the function, resolving styles on the result\n    return function () {\n      var result = children.apply(this, arguments);\n\n      if (React.isValidElement(result)) {\n        var _key = getStateKey(result);\n        delete extraStateKeyMap[_key];\n\n        var _resolveStyles = _resolveStyles5(component, result, config, existingKeyMap, true, extraStateKeyMap),\n            _element = _resolveStyles.element;\n\n        return _element;\n      }\n\n      return result;\n    };\n  }\n\n  if (React.Children.count(children) === 1 && children.type) {\n    // If a React Element is an only child, don't wrap it in an array for\n    // React.Children.map() for React.Children.only() compatibility.\n    var onlyChild = React.Children.only(children);\n    var _key2 = getStateKey(onlyChild);\n    delete extraStateKeyMap[_key2];\n\n    var _resolveStyles2 = _resolveStyles5(component, onlyChild, config, existingKeyMap, true, extraStateKeyMap),\n        _element2 = _resolveStyles2.element;\n\n    return _element2;\n  }\n\n  return React.Children.map(children, function (child) {\n    if (React.isValidElement(child)) {\n      var _key3 = getStateKey(child);\n      delete extraStateKeyMap[_key3];\n\n      var _resolveStyles3 = _resolveStyles5(component, child, config, existingKeyMap, true, extraStateKeyMap),\n          _element3 = _resolveStyles3.element;\n\n      return _element3;\n    }\n\n    return child;\n  });\n};\n\n// Recurse over props, just like children\nvar _resolveProps = function _resolveProps(_ref2) {\n  var component = _ref2.component,\n      config = _ref2.config,\n      existingKeyMap = _ref2.existingKeyMap,\n      props = _ref2.props,\n      extraStateKeyMap = _ref2.extraStateKeyMap;\n\n  var newProps = props;\n\n  Object.keys(props).forEach(function (prop) {\n    // We already recurse over children above\n    if (prop === 'children') {\n      return;\n    }\n\n    var propValue = props[prop];\n    if (React.isValidElement(propValue)) {\n      var _key4 = getStateKey(propValue);\n      delete extraStateKeyMap[_key4];\n      newProps = _extends({}, newProps);\n\n      var _resolveStyles4 = _resolveStyles5(component, propValue, config, existingKeyMap, true, extraStateKeyMap),\n          _element4 = _resolveStyles4.element;\n\n      newProps[prop] = _element4;\n    }\n  });\n\n  return newProps;\n};\n\nvar _buildGetKey = function _buildGetKey(_ref3) {\n  var componentName = _ref3.componentName,\n      existingKeyMap = _ref3.existingKeyMap,\n      renderedElement = _ref3.renderedElement;\n\n  // We need a unique key to correlate state changes due to user interaction\n  // with the rendered element, so we know to apply the proper interactive\n  // styles.\n  var originalKey = getStateKey(renderedElement);\n  var key = cleanStateKey(originalKey);\n\n  var alreadyGotKey = false;\n  var getKey = function getKey() {\n    if (alreadyGotKey) {\n      return key;\n    }\n\n    alreadyGotKey = true;\n\n    if (existingKeyMap[key]) {\n      var elementName = void 0;\n      if (typeof renderedElement.type === 'string') {\n        elementName = renderedElement.type;\n      } else if (renderedElement.type.constructor) {\n        elementName = renderedElement.type.constructor.displayName || renderedElement.type.constructor.name;\n      }\n\n      throw new Error('Radium requires each element with interactive styles to have a unique ' + 'key, set using either the ref or key prop. ' + (originalKey ? 'Key \"' + originalKey + '\" is a duplicate.' : 'Multiple elements have no key specified.') + ' ' + 'Component: \"' + componentName + '\". ' + (elementName ? 'Element: \"' + elementName + '\".' : ''));\n    }\n\n    existingKeyMap[key] = true;\n\n    return key;\n  };\n\n  return getKey;\n};\n\nvar _setStyleState = function _setStyleState(component, key, stateKey, value) {\n  if (!component._radiumIsMounted) {\n    return;\n  }\n\n  var existing = getRadiumStyleState(component);\n  var state = { _radiumStyleState: _extends({}, existing) };\n\n  state._radiumStyleState[key] = _extends({}, state._radiumStyleState[key]);\n  state._radiumStyleState[key][stateKey] = value;\n\n  component._lastRadiumState = state._radiumStyleState;\n  component.setState(state);\n};\n\nvar _runPlugins = function _runPlugins(_ref4) {\n  var component = _ref4.component,\n      config = _ref4.config,\n      existingKeyMap = _ref4.existingKeyMap,\n      props = _ref4.props,\n      renderedElement = _ref4.renderedElement;\n\n  // Don't run plugins if renderedElement is not a simple ReactDOMElement or has\n  // no style.\n  if (!React.isValidElement(renderedElement) || typeof renderedElement.type !== 'string' || !props.style) {\n    return props;\n  }\n\n  var newProps = props;\n\n  var plugins = config.plugins || DEFAULT_CONFIG.plugins;\n\n  var componentName = component.constructor.displayName || component.constructor.name;\n  var getKey = _buildGetKey({\n    renderedElement: renderedElement,\n    existingKeyMap: existingKeyMap,\n    componentName: componentName\n  });\n  var getComponentField = function getComponentField(key) {\n    return component[key];\n  };\n  var getGlobalState = function getGlobalState(key) {\n    return globalState[key];\n  };\n  var componentGetState = function componentGetState(stateKey, elementKey) {\n    return getState(component.state, elementKey || getKey(), stateKey);\n  };\n  var setState = function setState(stateKey, value, elementKey) {\n    return _setStyleState(component, elementKey || getKey(), stateKey, value);\n  };\n\n  var addCSS = function addCSS(css) {\n    var styleKeeper = component._radiumStyleKeeper || component.context._radiumStyleKeeper;\n    if (!styleKeeper) {\n      if (__isTestModeEnabled) {\n        return {\n          remove: function remove() {}\n        };\n      }\n\n      throw new Error('To use plugins requiring `addCSS` (e.g. keyframes, media queries), ' + 'please wrap your application in the StyleRoot component. Component ' + 'name: `' + componentName + '`.');\n    }\n\n    return styleKeeper.addCSS(css);\n  };\n\n  var newStyle = props.style;\n\n  plugins.forEach(function (plugin) {\n    var result = plugin({\n      ExecutionEnvironment: ExecutionEnvironment,\n      addCSS: addCSS,\n      appendImportantToEachValue: appendImportantToEachValue,\n      componentName: componentName,\n      config: config,\n      cssRuleSetToString: cssRuleSetToString,\n      getComponentField: getComponentField,\n      getGlobalState: getGlobalState,\n      getState: componentGetState,\n      hash: hash,\n      mergeStyles: mergeStyles,\n      props: newProps,\n      setState: setState,\n      isNestedStyle: isNestedStyle,\n      style: newStyle\n    }) || {};\n\n    newStyle = result.style || newStyle;\n\n    newProps = result.props && Object.keys(result.props).length ? _extends({}, newProps, result.props) : newProps;\n\n    var newComponentFields = result.componentFields || {};\n    Object.keys(newComponentFields).forEach(function (fieldName) {\n      component[fieldName] = newComponentFields[fieldName];\n    });\n\n    var newGlobalState = result.globalState || {};\n    Object.keys(newGlobalState).forEach(function (key) {\n      globalState[key] = newGlobalState[key];\n    });\n  });\n\n  if (newStyle !== props.style) {\n    newProps = _extends({}, newProps, { style: newStyle });\n  }\n\n  return newProps;\n};\n\n// Wrapper around React.cloneElement. To avoid processing the same element\n// twice, whenever we clone an element add a special prop to make sure we don't\n// process this element again.\nvar _cloneElement = function _cloneElement(renderedElement, newProps, newChildren) {\n  // Only add flag if this is a normal DOM element\n  if (typeof renderedElement.type === 'string') {\n    newProps = _extends({}, newProps, { 'data-radium': true });\n  }\n\n  return React.cloneElement(renderedElement, newProps, newChildren);\n};\n\n//\n// The nucleus of Radium. resolveStyles is called on the rendered elements\n// before they are returned in render. It iterates over the elements and\n// children, rewriting props to add event handlers required to capture user\n// interactions (e.g. mouse over). It also replaces the style prop because it\n// adds in the various interaction styles (e.g. :hover).\n//\n/* eslint-disable max-params */\n_resolveStyles5 = function resolveStyles(component, // ReactComponent, flow+eslint complaining\nrenderedElement) {\n  var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_CONFIG;\n  var existingKeyMap = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var shouldCheckBeforeResolve = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var extraStateKeyMap = arguments[5];\n\n  // The extraStateKeyMap is for determining which keys should be erased from\n  // the state (i.e. which child components are unmounted and should no longer\n  // have a style state).\n  if (!extraStateKeyMap) {\n    var state = getRadiumStyleState(component);\n    extraStateKeyMap = Object.keys(state).reduce(function (acc, key) {\n      // 'main' is the auto-generated key when there is only one element with\n      // interactive styles and if a custom key is not assigned. Because of\n      // this, it is impossible to know which child is 'main', so we won't\n      // count this key when generating our extraStateKeyMap.\n      if (key !== 'main') {\n        acc[key] = true;\n      }\n      return acc;\n    }, {});\n  }\n\n  if (Array.isArray(renderedElement) && !renderedElement.props) {\n    var elements = renderedElement.map(function (element) {\n      // element is in-use, so remove from the extraStateKeyMap\n      if (extraStateKeyMap) {\n        var _key5 = getStateKey(element);\n        delete extraStateKeyMap[_key5];\n      }\n\n      // this element is an array of elements,\n      // so return an array of elements with resolved styles\n      return _resolveStyles5(component, element, config, existingKeyMap, shouldCheckBeforeResolve, extraStateKeyMap).element;\n    });\n    return {\n      extraStateKeyMap: extraStateKeyMap,\n      element: elements\n    };\n  }\n\n  // ReactElement\n  if (!renderedElement ||\n  // Bail if we've already processed this element. This ensures that only the\n  // owner of an element processes that element, since the owner's render\n  // function will be called first (which will always be the case, since you\n  // can't know what else to render until you render the parent component).\n  renderedElement.props && renderedElement.props['data-radium'] ||\n  // Bail if this element is a radium enhanced element, because if it is,\n  // then it will take care of resolving its own styles.\n  shouldCheckBeforeResolve && !_shouldResolveStyles(renderedElement)) {\n    return { extraStateKeyMap: extraStateKeyMap, element: renderedElement };\n  }\n\n  var children = renderedElement.props.children;\n\n  var newChildren = _resolveChildren({\n    children: children,\n    component: component,\n    config: config,\n    existingKeyMap: existingKeyMap,\n    extraStateKeyMap: extraStateKeyMap\n  });\n\n  var newProps = _resolveProps({\n    component: component,\n    config: config,\n    existingKeyMap: existingKeyMap,\n    extraStateKeyMap: extraStateKeyMap,\n    props: renderedElement.props\n  });\n\n  newProps = _runPlugins({\n    component: component,\n    config: config,\n    existingKeyMap: existingKeyMap,\n    props: newProps,\n    renderedElement: renderedElement\n  });\n\n  // If nothing changed, don't bother cloning the element. Might be a bit\n  // wasteful, as we add the sentinel to stop double-processing when we clone.\n  // Assume benign double-processing is better than unneeded cloning.\n  if (newChildren === children && newProps === renderedElement.props) {\n    return { extraStateKeyMap: extraStateKeyMap, element: renderedElement };\n  }\n\n  var element = _cloneElement(renderedElement, newProps !== renderedElement.props ? newProps : {}, newChildren);\n\n  return { extraStateKeyMap: extraStateKeyMap, element: element };\n};\n/* eslint-enable max-params */\n\n// Only for use by tests\nvar __isTestModeEnabled = false;\nif (process.env.NODE_ENV !== 'production') {\n  _resolveStyles5.__clearStateForTests = function () {\n    globalState = {};\n  };\n  _resolveStyles5.__setTestMode = function (isEnabled) {\n    __isTestModeEnabled = isEnabled;\n  };\n}\n\nexport default _resolveStyles5;"]},"metadata":{},"sourceType":"module"}