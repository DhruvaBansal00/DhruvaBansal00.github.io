{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _callbacks = [];\nvar _mouseUpListenerIsActive = false;\n\nfunction _handleMouseUp() {\n  _callbacks.forEach(function (callback) {\n    callback();\n  });\n}\n\nvar subscribe = function subscribe(callback) {\n  if (_callbacks.indexOf(callback) === -1) {\n    _callbacks.push(callback);\n  }\n\n  if (!_mouseUpListenerIsActive) {\n    window.addEventListener('mouseup', _handleMouseUp);\n    _mouseUpListenerIsActive = true;\n  }\n\n  return {\n    remove: function remove() {\n      var index = _callbacks.indexOf(callback);\n\n      _callbacks.splice(index, 1);\n\n      if (_callbacks.length === 0 && _mouseUpListenerIsActive) {\n        window.removeEventListener('mouseup', _handleMouseUp);\n        _mouseUpListenerIsActive = false;\n      }\n    }\n  };\n};\n\nexports.default = {\n  subscribe: subscribe,\n  __triggerForTests: _handleMouseUp\n};\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/home/dhruva/DhruvaBansal00.github.io/node_modules/radium/lib/plugins/mouse-up-listener.js"],"names":["Object","defineProperty","exports","value","_callbacks","_mouseUpListenerIsActive","_handleMouseUp","forEach","callback","subscribe","indexOf","push","window","addEventListener","remove","index","splice","length","removeEventListener","default","__triggerForTests","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGA,IAAIC,UAAU,GAAG,EAAjB;AACA,IAAIC,wBAAwB,GAAG,KAA/B;;AAEA,SAASC,cAAT,GAA0B;AACxBF,EAAAA,UAAU,CAACG,OAAX,CAAmB,UAAUC,QAAV,EAAoB;AACrCA,IAAAA,QAAQ;AACT,GAFD;AAGD;;AAED,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBD,QAAnB,EAA6B;AAC3C,MAAIJ,UAAU,CAACM,OAAX,CAAmBF,QAAnB,MAAiC,CAAC,CAAtC,EAAyC;AACvCJ,IAAAA,UAAU,CAACO,IAAX,CAAgBH,QAAhB;AACD;;AAED,MAAI,CAACH,wBAAL,EAA+B;AAC7BO,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCP,cAAnC;AACAD,IAAAA,wBAAwB,GAAG,IAA3B;AACD;;AAED,SAAO;AACLS,IAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,UAAIC,KAAK,GAAGX,UAAU,CAACM,OAAX,CAAmBF,QAAnB,CAAZ;;AACAJ,MAAAA,UAAU,CAACY,MAAX,CAAkBD,KAAlB,EAAyB,CAAzB;;AAEA,UAAIX,UAAU,CAACa,MAAX,KAAsB,CAAtB,IAA2BZ,wBAA/B,EAAyD;AACvDO,QAAAA,MAAM,CAACM,mBAAP,CAA2B,SAA3B,EAAsCZ,cAAtC;AACAD,QAAAA,wBAAwB,GAAG,KAA3B;AACD;AACF;AATI,GAAP;AAWD,CArBD;;AAuBAH,OAAO,CAACiB,OAAR,GAAkB;AAChBV,EAAAA,SAAS,EAAEA,SADK;AAEhBW,EAAAA,iBAAiB,EAAEd;AAFH,CAAlB;AAIAe,MAAM,CAACnB,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _callbacks = [];\nvar _mouseUpListenerIsActive = false;\n\nfunction _handleMouseUp() {\n  _callbacks.forEach(function (callback) {\n    callback();\n  });\n}\n\nvar subscribe = function subscribe(callback) {\n  if (_callbacks.indexOf(callback) === -1) {\n    _callbacks.push(callback);\n  }\n\n  if (!_mouseUpListenerIsActive) {\n    window.addEventListener('mouseup', _handleMouseUp);\n    _mouseUpListenerIsActive = true;\n  }\n\n  return {\n    remove: function remove() {\n      var index = _callbacks.indexOf(callback);\n      _callbacks.splice(index, 1);\n\n      if (_callbacks.length === 0 && _mouseUpListenerIsActive) {\n        window.removeEventListener('mouseup', _handleMouseUp);\n        _mouseUpListenerIsActive = false;\n      }\n    }\n  };\n};\n\nexports.default = {\n  subscribe: subscribe,\n  __triggerForTests: _handleMouseUp\n};\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}