{"ast":null,"code":"var _jsxFileName = \"/home/dhruva/Desktop/DhruvaBansal00.github.io/src/components/elements/Timeline.js\";\nimport React from \"react\";\nimport TimelineItem from \"./TimelineItem\";\nimport TimelineHeader from \"./TimelineHeader\";\nimport Resume from \"../../resume.json\";\nimport Collapse from '@material-ui/core/Collapse';\n\nfunction Timeline() {\n  let active = window.screen.width < 768;\n  return React.createElement(\"div\", {\n    className: \"timeline \".concat(active ? \"is-left\" : \"is-centered\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"timeline-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"tag is-medium is-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, new Date().getFullYear())), React.createElement(\"div\", {\n    className: \"timeline-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"timeline-marker is-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"timeline-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })), Resume.work.map(item => {\n    return new Date(item.startDate).getFullYear();\n  }).filter((value, index, self) => self.indexOf(value) === index).map((year, i) => {\n    let content = [];\n    content.push(React.createElement(TimelineHeader, {\n      key: i,\n      year: year,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n    content.push(Resume.work.filter(work => new Date(work.startDate).getFullYear() === year).map((item, j) => {\n      return (// <div>\n        React.createElement(TimelineItem, {\n          onClick: handleExpandClick,\n          \"aria-expanded\": expanded,\n          \"aria-label\": \"show more\",\n          key: j,\n          image: item.image,\n          date: new Date(item.startDate).toLocaleString(\"en-UK\", {\n            month: \"long\",\n            year: \"numeric\"\n          }),\n          company: item.company,\n          summary: item.summary,\n          position: item.position,\n          website: item.website,\n          endDate: item.endDate,\n          badge: item.highlights,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        })\n      );\n    }));\n    return content;\n  }));\n}\n\nexport default Timeline;","map":{"version":3,"sources":["/home/dhruva/Desktop/DhruvaBansal00.github.io/src/components/elements/Timeline.js"],"names":["React","TimelineItem","TimelineHeader","Resume","Collapse","Timeline","active","window","screen","width","Date","getFullYear","work","map","item","startDate","filter","value","index","self","indexOf","year","i","content","push","j","handleExpandClick","expanded","image","toLocaleString","month","company","summary","position","website","endDate","highlights"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,SAASC,QAAT,GAAoB;AAClB,MAAIC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAcC,KAAd,GAAsB,GAAnC;AACA,SACE;AAAK,IAAA,SAAS,qBAAcH,MAAM,GAAG,SAAH,GAAe,aAAnC,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,IAAII,IAAJ,GAAWC,WAAX,EADH,CADA,CADA,EAMF;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANE,EAUDR,MAAM,CAACS,IAAP,CACEC,GADF,CACMC,IAAI,IAAI;AACX,WAAO,IAAIJ,IAAJ,CAASI,IAAI,CAACC,SAAd,EAAyBJ,WAAzB,EAAP;AACD,GAHF,EAGIK,MAHJ,CAGW,CAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf,KAAwBA,IAAI,CAACC,OAAL,CAAaH,KAAb,MAAwBC,KAH3D,EAIEL,GAJF,CAIM,CAACQ,IAAD,EAAOC,CAAP,KAAa;AAChB,QAAIC,OAAO,GAAG,EAAd;AACAA,IAAAA,OAAO,CAACC,IAAR,CACE,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAEF,CAArB;AAAwB,MAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGAE,IAAAA,OAAO,CAACC,IAAR,CACErB,MAAM,CAACS,IAAP,CACGI,MADH,CACUJ,IAAI,IAAI,IAAIF,IAAJ,CAASE,IAAI,CAACG,SAAd,EAAyBJ,WAAzB,OAA2CU,IAD7D,EAEGR,GAFH,CAEO,CAACC,IAAD,EAAOW,CAAP,KAAa;AAChB,aACE;AACA,4BAAC,YAAD;AACE,UAAA,OAAO,EAAEC,iBADX;AAEE,2BAAeC,QAFjB;AAGE,wBAAW,WAHb;AAKE,UAAA,GAAG,EAAEF,CALP;AAME,UAAA,KAAK,EAAEX,IAAI,CAACc,KANd;AAOE,UAAA,IAAI,EAAE,IAAIlB,IAAJ,CAASI,IAAI,CAACC,SAAd,EAAyBc,cAAzB,CAAwC,OAAxC,EAAiD;AACrDC,YAAAA,KAAK,EAAE,MAD8C;AAErDT,YAAAA,IAAI,EAAE;AAF+C,WAAjD,CAPR;AAWE,UAAA,OAAO,EAAEP,IAAI,CAACiB,OAXhB;AAYE,UAAA,OAAO,EAAEjB,IAAI,CAACkB,OAZhB;AAaE,UAAA,QAAQ,EAAElB,IAAI,CAACmB,QAbjB;AAcE,UAAA,OAAO,EAAEnB,IAAI,CAACoB,OAdhB;AAeE,UAAA,OAAO,EAAEpB,IAAI,CAACqB,OAfhB;AAgBE,UAAA,KAAK,EAAErB,IAAI,CAACsB,UAhBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAqBD,KAxBH,CADF;AA2BA,WAAOb,OAAP;AACD,GArCF,CAVC,CADF;AAmDD;;AAED,eAAelB,QAAf","sourcesContent":["import React from \"react\";\nimport TimelineItem from \"./TimelineItem\";\nimport TimelineHeader from \"./TimelineHeader\";\nimport Resume from \"../../resume.json\";\nimport Collapse from '@material-ui/core/Collapse';\n\nfunction Timeline() {\n  let active = window.screen.width < 768;\n  return (\n    <div className={`timeline ${active ? \"is-left\" : \"is-centered\"}`}>\n    <header className=\"timeline-header\">\n    <span className=\"tag is-medium is-dark\">\n      {new Date().getFullYear()}\n    </span>\n  </header>\n  <div className=\"timeline-item\">\n    <div className=\"timeline-marker is-success\"></div>\n    <div className=\"timeline-content\"></div>\n  </div>\n  {Resume.work\n    .map(item => {\n      return new Date(item.startDate).getFullYear();\n    }).filter((value, index, self) => self.indexOf(value) === index)\n    .map((year, i) => {\n      let content = [];\n      content.push(\n        <TimelineHeader key={i} year={year}/>\n      );\n      content.push(\n        Resume.work\n          .filter(work => new Date(work.startDate).getFullYear() === year)\n          .map((item, j) => {\n            return (\n              // <div>\n              <TimelineItem\n                onClick={handleExpandClick}\n                aria-expanded={expanded}\n                aria-label=\"show more\"\n\n                key={j}\n                image={item.image}\n                date={new Date(item.startDate).toLocaleString(\"en-UK\", {\n                  month: \"long\",\n                  year: \"numeric\"\n                })}\n                company={item.company}\n                summary={item.summary}\n                position={item.position}\n                website={item.website}\n                endDate={item.endDate}\n                badge={item.highlights}\n              />\n            );\n          })\n      );\n      return content;\n    })}\n    </div>\n  );\n}\n\nexport default Timeline;\n"]},"metadata":{},"sourceType":"module"}