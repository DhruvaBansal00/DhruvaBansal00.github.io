{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Repulser = void 0;\n\nconst Enums_1 = require(\"../../Enums\");\n\nconst Utils_1 = require(\"../../Utils\");\n\nconst Vector_1 = require(\"../../Core/Particle/Vector\");\n\nclass Repulser {\n  constructor(container) {\n    this.container = container;\n  }\n\n  isEnabled() {\n    const container = this.container;\n    const options = container.actualOptions;\n    const mouse = container.interactivity.mouse;\n    const events = options.interactivity.events;\n    const divs = events.onDiv;\n    const divRepulse = Utils_1.Utils.isDivModeEnabled(Enums_1.DivMode.repulse, divs);\n\n    if (!(divRepulse || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n      return false;\n    }\n\n    const hoverMode = events.onHover.mode;\n    const clickMode = events.onClick.mode;\n    return Utils_1.Utils.isInArray(Enums_1.HoverMode.repulse, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.repulse, clickMode) || divRepulse;\n  }\n\n  reset() {}\n\n  interact() {\n    const container = this.container;\n    const options = container.actualOptions;\n    const mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n    const events = options.interactivity.events;\n    const hoverEnabled = events.onHover.enable;\n    const hoverMode = events.onHover.mode;\n    const clickEnabled = events.onClick.enable;\n    const clickMode = events.onClick.mode;\n    const divs = events.onDiv;\n\n    if (mouseMoveStatus && hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.repulse, hoverMode)) {\n      this.hoverRepulse();\n    } else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.repulse, clickMode)) {\n      this.clickRepulse();\n    } else {\n      Utils_1.Utils.divModeExecute(Enums_1.DivMode.repulse, divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n    }\n  }\n\n  singleSelectorRepulse(selector, div) {\n    const container = this.container;\n    const query = document.querySelectorAll(selector);\n\n    if (!query.length) {\n      return;\n    }\n\n    query.forEach(item => {\n      const elem = item;\n      const pxRatio = container.retina.pixelRatio;\n      const pos = {\n        x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n        y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n      };\n      const repulseRadius = elem.offsetWidth / 2 * pxRatio;\n      const area = div.type === Enums_1.DivType.circle ? new Utils_1.Circle(pos.x, pos.y, repulseRadius) : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio);\n      const divs = container.actualOptions.interactivity.modes.repulse.divs;\n      const divRepulse = Utils_1.Utils.divMode(divs, elem);\n      this.processRepulse(pos, repulseRadius, area, divRepulse);\n    });\n  }\n\n  hoverRepulse() {\n    const container = this.container;\n    const mousePos = container.interactivity.mouse.position;\n\n    if (!mousePos) {\n      return;\n    }\n\n    const repulseRadius = container.retina.repulseModeDistance;\n    this.processRepulse(mousePos, repulseRadius, new Utils_1.Circle(mousePos.x, mousePos.y, repulseRadius));\n  }\n\n  processRepulse(position, repulseRadius, area, divRepulse) {\n    var _a;\n\n    const container = this.container;\n    const query = container.particles.quadTree.query(area);\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = query[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        const particle = _step.value;\n\n        const _Utils_1$NumberUtils$ = Utils_1.NumberUtils.getDistances(particle.position, position),\n              dx = _Utils_1$NumberUtils$.dx,\n              dy = _Utils_1$NumberUtils$.dy,\n              distance = _Utils_1$NumberUtils$.distance;\n\n        const normVec = {\n          x: dx / distance,\n          y: dy / distance\n        };\n        const velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity.modes.repulse.speed) * 100;\n        const repulseFactor = Utils_1.NumberUtils.clamp((1 - Math.pow(distance / repulseRadius, 2)) * velocity, 0, 50);\n        particle.position.x += normVec.x * repulseFactor;\n        particle.position.y += normVec.y * repulseFactor;\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n\n  clickRepulse() {\n    const container = this.container;\n\n    if (!container.repulse.finish) {\n      if (!container.repulse.count) {\n        container.repulse.count = 0;\n      }\n\n      container.repulse.count++;\n\n      if (container.repulse.count === container.particles.count) {\n        container.repulse.finish = true;\n      }\n    }\n\n    if (container.repulse.clicking) {\n      const repulseDistance = container.retina.repulseModeDistance;\n      const repulseRadius = Math.pow(repulseDistance / 6, 3);\n      const mouseClickPos = container.interactivity.mouse.clickPosition;\n\n      if (mouseClickPos === undefined) {\n        return;\n      }\n\n      const range = new Utils_1.Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius);\n      const query = container.particles.quadTree.query(range);\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = query[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          const particle = _step2.value;\n\n          const _Utils_1$NumberUtils$2 = Utils_1.NumberUtils.getDistances(mouseClickPos, particle.position),\n                dx = _Utils_1$NumberUtils$2.dx,\n                dy = _Utils_1$NumberUtils$2.dy,\n                distance = _Utils_1$NumberUtils$2.distance;\n\n          const d = distance * distance;\n\n          if (d <= repulseRadius) {\n            container.repulse.particles.push(particle);\n            const velocity = container.actualOptions.interactivity.modes.repulse.speed;\n            const v = Vector_1.Vector.create(dx, dy);\n            v.length = -repulseRadius * velocity / d;\n            particle.velocity.setTo(v);\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    } else if (container.repulse.clicking === false) {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = container.repulse.particles[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          const particle = _step3.value;\n          particle.velocity.setTo(particle.initialVelocity);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      container.repulse.particles = [];\n    }\n  }\n\n}\n\nexports.Repulser = Repulser;","map":{"version":3,"sources":["/home/dhruva/Desktop/DhruvaBansal00.github.io/node_modules/tsparticles/dist/Interactions/External/Repulser.js"],"names":["Object","defineProperty","exports","value","Repulser","Enums_1","require","Utils_1","Vector_1","constructor","container","isEnabled","options","actualOptions","mouse","interactivity","events","divs","onDiv","divRepulse","Utils","isDivModeEnabled","DivMode","repulse","onHover","enable","position","onClick","clickPosition","hoverMode","mode","clickMode","isInArray","HoverMode","ClickMode","reset","interact","mouseMoveStatus","status","Constants","mouseMoveEvent","hoverEnabled","clickEnabled","hoverRepulse","clickRepulse","divModeExecute","selector","div","singleSelectorRepulse","query","document","querySelectorAll","length","forEach","item","elem","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","repulseRadius","area","type","DivType","circle","Circle","Rectangle","modes","divMode","processRepulse","mousePos","repulseModeDistance","_a","particles","quadTree","particle","NumberUtils","getDistances","dx","dy","distance","normVec","velocity","speed","repulseFactor","clamp","Math","pow","finish","count","clicking","repulseDistance","mouseClickPos","undefined","range","d","push","v","Vector","create","setTo","initialVelocity"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Repulser = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nconst Vector_1 = require(\"../../Core/Particle/Vector\");\nclass Repulser {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouse = container.interactivity.mouse;\n        const events = options.interactivity.events;\n        const divs = events.onDiv;\n        const divRepulse = Utils_1.Utils.isDivModeEnabled(Enums_1.DivMode.repulse, divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return (Utils_1.Utils.isInArray(Enums_1.HoverMode.repulse, hoverMode) || Utils_1.Utils.isInArray(Enums_1.ClickMode.repulse, clickMode) || divRepulse);\n    }\n    reset() {\n    }\n    interact() {\n        const container = this.container;\n        const options = container.actualOptions;\n        const mouseMoveStatus = container.interactivity.status === Utils_1.Constants.mouseMoveEvent;\n        const events = options.interactivity.events;\n        const hoverEnabled = events.onHover.enable;\n        const hoverMode = events.onHover.mode;\n        const clickEnabled = events.onClick.enable;\n        const clickMode = events.onClick.mode;\n        const divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && Utils_1.Utils.isInArray(Enums_1.HoverMode.repulse, hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && Utils_1.Utils.isInArray(Enums_1.ClickMode.repulse, clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            Utils_1.Utils.divModeExecute(Enums_1.DivMode.repulse, divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n        }\n    }\n    singleSelectorRepulse(selector, div) {\n        const container = this.container;\n        const query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item;\n            const pxRatio = container.retina.pixelRatio;\n            const pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            };\n            const repulseRadius = (elem.offsetWidth / 2) * pxRatio;\n            const area = div.type === Enums_1.DivType.circle\n                ? new Utils_1.Circle(pos.x, pos.y, repulseRadius)\n                : new Utils_1.Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio);\n            const divs = container.actualOptions.interactivity.modes.repulse.divs;\n            const divRepulse = Utils_1.Utils.divMode(divs, elem);\n            this.processRepulse(pos, repulseRadius, area, divRepulse);\n        });\n    }\n    hoverRepulse() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const repulseRadius = container.retina.repulseModeDistance;\n        this.processRepulse(mousePos, repulseRadius, new Utils_1.Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container;\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query) {\n            const { dx, dy, distance } = Utils_1.NumberUtils.getDistances(particle.position, position);\n            const normVec = {\n                x: dx / distance,\n                y: dy / distance,\n            };\n            const velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity.modes.repulse.speed) * 100;\n            const repulseFactor = Utils_1.NumberUtils.clamp((1 - Math.pow(distance / repulseRadius, 2)) * velocity, 0, 50);\n            particle.position.x += normVec.x * repulseFactor;\n            particle.position.y += normVec.y * repulseFactor;\n        }\n    }\n    clickRepulse() {\n        const container = this.container;\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance;\n            const repulseRadius = Math.pow(repulseDistance / 6, 3);\n            const mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Utils_1.Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius);\n            const query = container.particles.quadTree.query(range);\n            for (const particle of query) {\n                const { dx, dy, distance } = Utils_1.NumberUtils.getDistances(mouseClickPos, particle.position);\n                const d = distance * distance;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const velocity = container.actualOptions.interactivity.modes.repulse.speed;\n                    const v = Vector_1.Vector.create(dx, dy);\n                    v.length = (-repulseRadius * velocity) / d;\n                    particle.velocity.setTo(v);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n        }\n    }\n}\nexports.Repulser = Repulser;\n"]},"metadata":{},"sourceType":"script"}