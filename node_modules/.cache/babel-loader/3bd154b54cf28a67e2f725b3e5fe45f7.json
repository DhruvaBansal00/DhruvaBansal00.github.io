{"ast":null,"code":"import _slicedToArray from \"/home/dhruva/DhruvaBansal00.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/home/dhruva/DhruvaBansal00.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _asyncToGenerator from \"/home/dhruva/DhruvaBansal00.github.io/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _excluded = [\"username\", \"year\", \"transformData\"];\nimport _regeneratorRuntime from \"/home/dhruva/DhruvaBansal00.github.io/node_modules/@babel/runtime/regenerator/index.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport Calendar, { Skeleton } from 'react-activity-calendar';\nexport { createCalendarTheme } from 'react-activity-calendar';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n} // GitHub theme\n\n\nvar API_URL = 'https://github-contributions-api.jogruber.de/v4/';\nvar DEFAULT_THEME = {\n  level4: '#216e39',\n  level3: '#30a14e',\n  level2: '#40c463',\n  level1: '#9be9a8',\n  level0: '#ebedf0'\n};\n\nvar transformData = function transformData(data, transformFn) {\n  if (typeof transformFn !== 'function') {\n    return data;\n  }\n\n  var transformedData = transformFn(data);\n\n  if (!Array.isArray(transformedData)) {\n    throw new Error(\"Passed function transformData must return a list of Day objects.\");\n  }\n\n  if (transformedData.length > 0) {\n    var testObj = transformedData[0];\n\n    if (typeof testObj.count !== 'number' || testObj.count < 0) {\n      throw new Error(\"Required property \\\"count: number\\\" missing or invalid. Got: \".concat(testObj.count));\n    }\n\n    if (typeof testObj.date !== 'string' || !/(\\d{4})-(\\d{2})-(\\d{2})/.test(testObj.date)) {\n      throw new Error(\"Required property \\\"date: YYYY-MM-DD\\\" missing or invalid. Got: \".concat(testObj.date));\n    }\n\n    if (typeof testObj.level !== 'number' || testObj.level < 0 || testObj.level > 4) {\n      throw new Error(\"Required property \\\"level: 0 | 1 | 2 | 3 | 4\\\" missing or invalid: Got: \".concat(testObj.level, \".\"));\n    }\n  }\n\n  return transformedData;\n};\n\nfunction fetchCalendarData(_x, _x2) {\n  return _fetchCalendarData.apply(this, arguments);\n}\n\nfunction _fetchCalendarData() {\n  _fetchCalendarData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(username, year) {\n    var response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"\".concat(API_URL).concat(username, \"?y=\").concat(year));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context.sent;\n\n            if (response.ok) {\n              _context.next = 8;\n              break;\n            }\n\n            throw new Error(data.error);\n\n          case 8:\n            return _context.abrupt(\"return\", data);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchCalendarData.apply(this, arguments);\n}\n\nvar GitHubCalendar = function GitHubCalendar(_ref) {\n  var _props$theme;\n\n  var username = _ref.username,\n      _ref$year = _ref.year,\n      year = _ref$year === void 0 ? 'last' : _ref$year,\n      transformDataProp = _ref.transformData,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var transformDataCallback = useCallback(function (contributions) {\n    return transformData(contributions, transformDataProp);\n  }, [transformDataProp]);\n  var fetchData = useCallback(function () {\n    setLoading(true);\n    setError(null);\n    fetchCalendarData(username, year).then(function (_ref2) {\n      var contributions = _ref2.contributions;\n      return setData(transformDataCallback(contributions));\n    }).catch(setError).finally(function () {\n      return setLoading(false);\n    });\n  }, [username, year, transformDataCallback]);\n  useEffect(fetchData, [fetchData]);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"i\", null, \"Unable to fetch contribution data. See console.\"));\n  }\n\n  if (loading || !data) {\n    return /*#__PURE__*/React.createElement(Skeleton, _extends({}, props, {\n      loading: true\n    }));\n  }\n\n  var theme = props.color ? undefined : (_props$theme = props.theme) !== null && _props$theme !== void 0 ? _props$theme : DEFAULT_THEME;\n  var labels = {\n    totalCount: \"{{count}} contributions in \".concat(year === 'last' ? 'the last year' : '{{year}}')\n  };\n  return /*#__PURE__*/React.createElement(Calendar, _extends({\n    data: data,\n    theme: theme,\n    labels: labels\n  }, props));\n};\n\nexport { GitHubCalendar as default };","map":{"version":3,"sources":["/home/dhruva/DhruvaBansal00.github.io/node_modules/react-github-calendar/src/constants.ts","/home/dhruva/DhruvaBansal00.github.io/node_modules/react-github-calendar/src/utils.ts","/home/dhruva/DhruvaBansal00.github.io/node_modules/react-github-calendar/src/index.tsx"],"names":["API_URL","DEFAULT_THEME","level4","level3","level2","level1","level0","transformData","transformedData","transformFn","Array","testObj","response","fetch","username","data","GitHubCalendar","year","props","useState","transformDataCallback","useCallback","contributions","fetchData","setLoading","setError","fetchCalendarData","setData","useEffect","loading","theme","labels","totalCount"],"mappings":"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","sourcesContent":["// GitHub theme\nimport { Theme } from 'react-activity-calendar';\n\nexport const API_URL = 'https://github-contributions-api.jogruber.de/v4/';\n\nexport const DEFAULT_THEME: Theme = {\n  level4: '#216e39',\n  level3: '#30a14e',\n  level2: '#40c463',\n  level1: '#9be9a8',\n  level0: '#ebedf0',\n};\n","import { CalendarData } from 'react-activity-calendar';\n\nimport { Props } from './index';\n\nexport const transformData = (\n  data: CalendarData,\n  transformFn?: Props['transformData'],\n): CalendarData => {\n  if (typeof transformFn !== 'function') {\n    return data;\n  }\n\n  const transformedData = transformFn(data);\n\n  if (!Array.isArray(transformedData)) {\n    throw new Error(`Passed function transformData must return a list of Day objects.`);\n  }\n\n  if (transformedData.length > 0) {\n    const testObj = transformedData[0];\n\n    if (typeof testObj.count !== 'number' || testObj.count < 0) {\n      throw new Error(\n        `Required property \"count: number\" missing or invalid. Got: ${testObj.count}`,\n      );\n    }\n\n    if (typeof testObj.date !== 'string' || !/(\\d{4})-(\\d{2})-(\\d{2})/.test(testObj.date)) {\n      throw new Error(\n        `Required property \"date: YYYY-MM-DD\" missing or invalid. Got: ${testObj.date}`,\n      );\n    }\n\n    if (typeof testObj.level !== 'number' || testObj.level < 0 || testObj.level > 4) {\n      throw new Error(\n        `Required property \"level: 0 | 1 | 2 | 3 | 4\" missing or invalid: Got: ${testObj.level}.`,\n      );\n    }\n  }\n\n  return transformedData;\n};\n","import React, { FunctionComponent, useCallback, useEffect, useState } from 'react';\nimport Calendar, {\n  CalendarData,\n  createCalendarTheme,\n  Props as CalendarProps,\n  Skeleton,\n} from 'react-activity-calendar';\n\nimport { API_URL, DEFAULT_THEME } from './constants';\nimport { ApiErrorResponse, ApiResponse, Year } from './types';\nimport { transformData } from './utils';\n\nexport interface Props extends Omit<CalendarProps, 'data'> {\n  username: string;\n  year?: Year;\n  transformData?: (data: CalendarData) => CalendarData;\n}\n\nasync function fetchCalendarData(username: string, year: Year): Promise<ApiResponse> {\n  const response = await fetch(`${API_URL}${username}?y=${year}`);\n  const data: ApiResponse | ApiErrorResponse = await response.json();\n\n  if (!response.ok) {\n    throw new Error((data as ApiErrorResponse).error);\n  }\n\n  return data as ApiResponse;\n}\n\nconst GitHubCalendar: FunctionComponent<Props> = ({\n  username,\n  year = 'last',\n  transformData: transformDataProp,\n  ...props\n}) => {\n  const [data, setData] = useState<CalendarData | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  const transformDataCallback = useCallback(\n    (contributions: CalendarData) => transformData(contributions, transformDataProp),\n    [transformDataProp],\n  );\n\n  const fetchData = useCallback(() => {\n    setLoading(true);\n    setError(null);\n    fetchCalendarData(username, year)\n      .then(({ contributions }) => setData(transformDataCallback(contributions)))\n      .catch(setError)\n      .finally(() => setLoading(false));\n  }, [username, year, transformDataCallback]);\n\n  useEffect(fetchData, [fetchData]);\n\n  if (error) {\n    return (\n      <div>\n        <i>Unable to fetch contribution data. See console.</i>\n      </div>\n    );\n  }\n\n  if (loading || !data) {\n    return <Skeleton {...props} loading />;\n  }\n\n  const theme = props.color ? undefined : props.theme ?? DEFAULT_THEME;\n\n  const labels = {\n    totalCount: `{{count}} contributions in ${year === 'last' ? 'the last year' : '{{year}}'}`,\n  };\n\n  return <Calendar data={data} theme={theme} labels={labels} {...props} />;\n};\n\nexport { createCalendarTheme };\nexport default GitHubCalendar;\n"]},"metadata":{},"sourceType":"module"}