[{"/home/dhruva/DhruvaBansal00.github.io/src/index.js":"1","/home/dhruva/DhruvaBansal00.github.io/src/App.js":"2","/home/dhruva/DhruvaBansal00.github.io/src/components/structure/Header.js":"3","/home/dhruva/DhruvaBansal00.github.io/src/components/structure/Content.js":"4","/home/dhruva/DhruvaBansal00.github.io/src/components/structure/Footer.js":"5","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/Hero.js":"6","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/particlesConfig.js":"7","/home/dhruva/DhruvaBansal00.github.io/src/components/sections/AboutMe.js":"8","/home/dhruva/DhruvaBansal00.github.io/src/components/sections/Experience.js":"9","/home/dhruva/DhruvaBansal00.github.io/src/components/sections/Projects.js":"10","/home/dhruva/DhruvaBansal00.github.io/src/components/sections/GitHub.js":"11","/home/dhruva/DhruvaBansal00.github.io/src/components/sections/Research.js":"12","/home/dhruva/DhruvaBansal00.github.io/src/components/sections/Contact.js":"13","/home/dhruva/DhruvaBansal00.github.io/src/components/sections/Awards.js":"14","/home/dhruva/DhruvaBansal00.github.io/src/components/sections/Skills.js":"15","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/NavBar.js":"16","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/Badge.js":"17","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/Timeline.js":"18","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/repoCard.js":"19","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/paperCard.js":"20","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/AwardCard.js":"21","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/SkillsList.js":"22","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/HTimeline.js":"23","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/MenuItem.js":"24","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/TimelineItem.js":"25","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/TimelineHeader.js":"26","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/TimelineContent.js":"27"},{"size":145,"mtime":1641470364120,"results":"28","hashOfConfig":"29"},{"size":615,"mtime":1641470364116,"results":"30","hashOfConfig":"29"},{"size":169,"mtime":1641470364120,"results":"31","hashOfConfig":"29"},{"size":607,"mtime":1641470364120,"results":"32","hashOfConfig":"29"},{"size":887,"mtime":1641470364120,"results":"33","hashOfConfig":"29"},{"size":2018,"mtime":1641470364116,"results":"34","hashOfConfig":"29"},{"size":2027,"mtime":1641474228698,"results":"35","hashOfConfig":"29"},{"size":1892,"mtime":1641470364120,"results":"36","hashOfConfig":"29"},{"size":323,"mtime":1641470364120,"results":"37","hashOfConfig":"29"},{"size":615,"mtime":1641470364120,"results":"38","hashOfConfig":"29"},{"size":563,"mtime":1641470364120,"results":"39","hashOfConfig":"29"},{"size":572,"mtime":1641470364120,"results":"40","hashOfConfig":"29"},{"size":4627,"mtime":1641470364120,"results":"41","hashOfConfig":"29"},{"size":752,"mtime":1641470364120,"results":"42","hashOfConfig":"29"},{"size":1155,"mtime":1641470364120,"results":"43","hashOfConfig":"29"},{"size":1653,"mtime":1641470364116,"results":"44","hashOfConfig":"29"},{"size":649,"mtime":1641479253530,"results":"45","hashOfConfig":"29"},{"size":1771,"mtime":1641470364120,"results":"46","hashOfConfig":"29"},{"size":4369,"mtime":1641477665625,"results":"47","hashOfConfig":"29"},{"size":2916,"mtime":1641477917277,"results":"48","hashOfConfig":"29"},{"size":2642,"mtime":1641477641705,"results":"49","hashOfConfig":"29"},{"size":1897,"mtime":1641477645477,"results":"50","hashOfConfig":"29"},{"size":1687,"mtime":1641470364116,"results":"51","hashOfConfig":"29"},{"size":193,"mtime":1641470364116,"results":"52","hashOfConfig":"29"},{"size":1449,"mtime":1641479925578,"results":"53","hashOfConfig":"29"},{"size":227,"mtime":1641470364120,"results":"54","hashOfConfig":"29"},{"size":1695,"mtime":1641470364120,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8rxa33",{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},"/home/dhruva/DhruvaBansal00.github.io/src/index.js",[],"/home/dhruva/DhruvaBansal00.github.io/src/App.js",[],"/home/dhruva/DhruvaBansal00.github.io/src/components/structure/Header.js",[],"/home/dhruva/DhruvaBansal00.github.io/src/components/structure/Content.js",[],"/home/dhruva/DhruvaBansal00.github.io/src/components/structure/Footer.js",["124","125"],"import React from \"react\";\nimport Particles from 'react-particles-js';\nimport particlesConfig from '../elements/particlesConfig';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\" style={{ position: 'relative', overflow: \"hidden\", backgroundImage: \"linear-gradient(to right, #e66465, #9198e5)\" }}>\n      <div className=\"content has-text-centered has-text-white\">\n        <p>\n          Built at <i className=\"fas fa-moon\"></i> by{\" \"}\n          <a href=\"https://github.com/DhruvaBansal00\" className=\"has-text-white\">\n            <strong>Dhruva Bansal</strong>\n          </a>\n        </p>\n        <p>\n          <img\n            width=\"512\"\n            height=\"96\"\n            src=\"https://bulma.io/images/made-with-bulma--semiwhite.png\"\n            className=\"bulma-image\"\n            alt=\"\"\n          />\n        </p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/Hero.js",["126","127"],"import React from \"react\";\nimport NavBar from \"./NavBar\";\nimport Resume from \"../../resume.json\";\nimport Particles from 'react-particles-js';\nimport particlesConfig from './particlesConfig';\n\nvar ReactRotatingText = require('react-rotating-text');\nfunction Hero() {\n  return (\n    <section className=\"hero is-dark is-fullheight has-bg-image\">\n      {/* style={{ position: 'relative', overflow: \"hidden\", backgroundImage: \"linear-gradient(to right, #e66465, #9198e5)\" }} */}\n      {/* <div style={{ position: 'absolute'}}>\n        <Particles height=\"100vh\" width=\"100vw\" params={particlesConfig} />\n      </div> */}\n      <div className=\"hero-head\">\n        <NavBar />\n      </div>\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <p className=\"subtitle is-5 has-text-weight-light\">I'm a</p>\n          <h1 className=\"title\" style={{ color: \"#ffb469\" }}>\n            <ReactRotatingText typingInterval=\"60\" items={Resume.basics.label} />\n          </h1>\n          <h2 className=\"subtitle\">\n            based in {Resume.basics.location.region}{Resume.basics.location.country} <br></br>\n            <i>{Resume.basics.email}</i>\n          </h2>\n        </div>\n      </div>\n      <div className=\"hero-foot\" style={{ paddingBottom: \"20px\", zIndex: \"10\" }}>\n        <div className=\"columns is-mobile\">\n          <div className=\"column\"></div>\n          {Resume.basics.profiles.map((value, index) => {\n            return (\n              <div key={index} className=\"column has-text-centered\">\n                <a\n                  href={value.url}\n                  target=\"blank\"\n                  className=\"is-hovered\"\n                  title={value.network}\n                >\n                  <span className=\"icon is-medium is-\">\n                    <i className={value.x_icon}></i>\n                  </span>\n                </a>\n              </div>\n            );\n          })}\n          <div className=\"column\"></div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Hero;\n","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/particlesConfig.js",[],"/home/dhruva/DhruvaBansal00.github.io/src/components/sections/AboutMe.js",[],"/home/dhruva/DhruvaBansal00.github.io/src/components/sections/Experience.js",[],"/home/dhruva/DhruvaBansal00.github.io/src/components/sections/Projects.js",[],"/home/dhruva/DhruvaBansal00.github.io/src/components/sections/GitHub.js",[],"/home/dhruva/DhruvaBansal00.github.io/src/components/sections/Research.js",[],"/home/dhruva/DhruvaBansal00.github.io/src/components/sections/Contact.js",["128"],"import React from \"react\";\nimport Resume from \"../../resume.json\"\n\n\nfunction Contact() {\n    let active = window.screen.width < 768;\n    let widthValue = active ? \"90%\" : \"50%\";\n    return (\n    <section className=\"section contactform has-bg-gt\" id=\"contact\">\n        <div className=\"container\">\n            <h1 className=\"title\" style={{color: \"white\"}}>Contact Me</h1>\n            <p className=\"is-mobile has-text-centered\" style={{color: \"white\"}}>\n            If you like my work and have cool projects to work on, feel free to reach out via the contact form below or through social sites and email!\n            </p>\n            <br></br>\n            <div className=\"columns is-mobile is-centered\">\n            <form action=\"https://formspree.io/f/xnqlpnke\" method=\"POST\" class=\"form-horizontal\" role=\"form\" style={{width: widthValue}}>\n                <div class=\"field\">\n                <label class=\"label\" style={{color: \"white\"}}>Name</label>\n                <div class=\"control\" >\n                    <input class=\"input\" type=\"text\" name=\"Name\" placeholder=\"\" required style={{backgroundColor: \"rgba(0, 0, 0, 0)\", color: \"white\"}}/>\n                </div>\n                </div>\n\n                <div class=\"field\">\n                <label class=\"label\" style={{color: \"white\"}}>Email</label>\n                <div class=\"control has-icons-left has-icons-right\">\n                    <input class=\"input\" type=\"email\" name=\"Email\" placeholder=\"\" required style={{backgroundColor: \"rgba(0, 0, 0, 0)\", color: \"white\"}}/>\n                    <span class=\"icon is-small is-left\">\n                    <i class=\"fas fa-envelope\"></i>\n                    </span>\n                    {/* <span class=\"icon is-small is-right\">\n                    <i class=\"fas fa-exclamation-triangle\"></i>\n                    </span> */}\n                </div>\n                {/* <p class=\"help is-danger\">This email is invalid</p> */}\n                </div>\n\n                <div class=\"field\">\n                <label class=\"label\" style={{color: \"white\"}}>Subject</label>\n                <div class=\"control\">\n                    <input class=\"input\" type=\"text\" placeholder=\"\" name=\"Subject\" style={{backgroundColor: \"rgba(0, 0, 0, 0)\", color: \"white\"}}/>\n                </div>\n                </div>\n\n                <div class=\"field\">\n                <label class=\"label\" style={{color: \"white\"}}>Message</label>\n                <div class=\"control\">\n                    <textarea class=\"textarea\" placeholder=\"\" name=\"Message\" style={{backgroundColor: \"rgba(0, 0, 0, 0)\", color: \"white\"}}></textarea>\n                </div>\n                </div>\n\n                <div class=\"field is-grouped\">\n                <div class=\"control\">\n                    <button class=\"button\" type=\"submit\" style={{backgroundColor:\"rgb(0,0,0,0)\", color:\"white\", borderColor:\"white\"}}>Submit</button>\n                </div>\n                <div class=\"control\">\n                    <button class=\"button\" type=\"reset\" style={{backgroundColor:\"rgb(0,0,0,0)\", color:\"white\", borderColor:\"white\"}}>Clear</button>\n                </div>\n                </div>\n                <br></br>\n                <p className=\"is-mobile has-text-centered\" style={{color: \"white\"}}>\n                You can find my email address and links to my Linkedin, GitHub, and Devpost accounts below:\n                </p>\n                <br></br>\n                <div className=\"hero-foot\" style={{ paddingBottom: \"20px\", zIndex: \"10\"}}>\n                <div className=\"columns is-mobile\">\n                <div className=\"column\"></div>\n                {Resume.basics.profiles.map((value, index) => {\n                    return (\n                    <div key={index} className=\"column has-text-centered\">\n                        <a\n                        href={value.url}\n                        target=\"blank\"\n                        className=\"is-hovered\"\n                        title={value.network}\n                        >\n                        <span className=\"icon is-medium is-\" style={{color:\"white\"}}>\n                            <i className={value.x_icon}></i>\n                        </span>\n                        </a>\n                    </div>\n                    );\n                })}\n                {/* <p className=\"is-mobile has-text-centered\" style={{color: \"white\"}}>\n                    <i>bdhruva [at] stanford [dot] edu</i>\n                </p> */}\n                <div className=\"column\"></div>\n                </div>\n                </div>\n            </form>\n            </div>\n        </div>\n    </section>\n    );\n}\n\nexport default Contact;","/home/dhruva/DhruvaBansal00.github.io/src/components/sections/Awards.js",["129"],"import React from \"react\";\nimport Resume from \"../../resume.json\"\nimport AwardCard from \"../elements/AwardCard\"\nimport {Carousel} from '3d-react-carousal';\nimport { Grid } from \"@material-ui/core\";\n\n// const slides = [\n//     Resume.Awards.map((item, j) => {\n//         return (\n//         <AwardCard award={item} />\n//         );\n//     })\n// ];\n\nfunction Awards () {        \n    return (\n        <section className=\"section\" id=\"awards\">\n        <div class=\"container\">\n        <h1 className=\"title\">Awards</h1>\n        <Grid container spacing={1} justify=\"center\">\n          {Resume.Awards.map((data, i) => (\n            <AwardCard award={data} key={i}/>\n          ))}\n        </Grid>\n        </div>\n        </section>\n    )\n}\nexport default Awards;","/home/dhruva/DhruvaBansal00.github.io/src/components/sections/Skills.js",["130"],"import React from \"react\";\nimport Resume from \"../../resume.json\";\nimport SkillItem from '../elements/SkillsList';\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  Grid,\n} from '@material-ui/core/'\nimport Timeline from \"../elements/HTimeline\"\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n      flexGrow: 1,\n      padding: theme.spacing(2)\n  }\n}))\n\nfunction Skills() {\n  const classes = useStyles()\n  return (\n    <section className=\"section\" id=\"skills\">\n      <div className=\"container\">\n        <h1 className=\"title\">Skills</h1>\n        <div className={classes.root}>\n            <Grid\n                container\n                spacing={3}\n                // direction=\"row\"\n                justify=\"center\"\n                // alignItems=\"flex-start\"\n                //={12} sm={6} md={3}\n                // flexwrap=\"wrap\"\n            >\n                {Resume.skills.map(elem => (\n                  <SkillItem index={Resume.skills.indexOf(elem)} name={elem.name} icon={elem.icon} use={elem.use} size={elem.size}/>\n                ))}\n            </Grid>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Skills;\n","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/NavBar.js",[],"/home/dhruva/DhruvaBansal00.github.io/src/components/elements/Badge.js",["131"],"import { Autorenew } from \"@material-ui/icons\";\nimport React from \"react\";\n\n// className=\"control\"\n\nfunction Badge(props) {\n  const faIcon = \"fas fa-1x \" + props.faIcon;\n  const rightToggleStyle = {\n    paddingLeft: props.leftTimeline ? 12 : null,\n    paddingBottom: props.leftTimeline ? 12 : null,\n };\n  return (\n    <div className={`${props.leftTimeline ? \"\" : \"control\"}`} style={rightToggleStyle}>\n      <div className=\"tags has-addons\">\n        <span className=\"tag is-dark\">{props.text}</span>\n        <span className=\"tag is-success\">\n          <i className={faIcon}></i>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Badge;\n",["132","133"],"/home/dhruva/DhruvaBansal00.github.io/src/components/elements/Timeline.js",[],"/home/dhruva/DhruvaBansal00.github.io/src/components/elements/repoCard.js",["134"],"import React from \"react\";\nimport {\n  makeStyles,\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Avatar,\n  Typography,\n  Grid,\n} from \"@material-ui/core\";\nimport { green, blue, purple } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 0,\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    display: \"flex\",\n  },\n  card: {\n    width: \"100%\",\n    height: \"100%\",\n    marginLeft: \"15px\",\n    marginRight: \"15px\",\n    margin: \"auto\",\n    transition: \"0.3s\",\n    minHeight: \"270px\",\n    borderRadius: \".625rem!important\",\n    boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.3)\",\n    \"&:hover\": {\n      boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\",\n    },\n  },\n  tittle: {\n    \"&:active\": {\n      color: \"#00008E\",\n    },\n  },\n  cardContent: {\n    minHeight: \"120px\",\n  },\n  cardActions: {\n    padding: \"16px\",\n  },\n  avatar: {\n    color: theme.palette.getContrastText(purple[500]),\n    backgroundColor: blue[500],\n  },\n  dot: {\n    height: \"12px\",\n    width: \"12px\",\n    borderRadius: \"50%\",\n    display: \"inline-block\",\n  },\n}));\n\nconst RepoCard = ({ repo, language }) => {\n  const classes = useStyles();\n  return (\n    <Grid xs={12} sm={6} lg={3} className={classes.root}>\n      <Card className={classes.card}>\n        <a\n        href={repo.html_url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className={classes.tittle}\n        style={{ textDecoration: \"none\", color: \"black\" }}\n        >\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              <span\n                className=\"fas fa-file-code\"\n                style={{ fontSize: \"20px\" }}\n              ></span>\n            </Avatar>\n          }\n          title={\n            <Typography variant=\"h6\">\n              \n                {repo.name}\n                {\" \"}\n            </Typography>\n          }\n        />\n        </a>\n        <a\n        href={repo.html_url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className={classes.tittle}\n        style={{ textDecoration: \"none\", color: \"black\" }}\n        >\n        <CardContent className={classes.cardContent}>\n          <Typography variant=\"body1\">{repo.description}</Typography>\n        </CardContent>\n        </a>\n        <CardActions className={classes.cardActions}>\n          {repo.language ? (\n            <React.Fragment>\n              <span\n                className={classes.dot}\n                style={{ backgroundColor: language[repo.language][\"color\"] }}\n              ></span>\n              <Typography style={{ marginRight: \"10px\" }}>\n                {repo.language}\n              </Typography>\n            </React.Fragment>\n          ) : null}\n          {repo.language2 ? (\n            <React.Fragment>\n              <span\n                className={classes.dot}\n                style={{ backgroundColor: language[repo.language2][\"color\"] }}\n              ></span>\n              <Typography style={{ marginRight: \"10px\" }}>\n                {repo.language2}\n              </Typography>\n            </React.Fragment>\n          ) : null}\n          {repo.stargazers_count >= 0 ? (\n            <React.Fragment>\n              <a\n                href={repo.html_url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{\n                  textDecoration: \"none\",\n                  marginRight: \"10px\",\n                  color: \"#551A8B\",\n                }}\n              >\n                <span className=\"octicon octicon-star\">\n                  {\" \"}\n                  {repo.stargazers_count}\n                </span>\n              </a>\n            </React.Fragment>\n          ) : null}\n          {repo.forks_count >= 0 ? (\n            <React.Fragment>\n              <a\n                href={`${repo.html_url}/fork`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{\n                  textDecoration: \"none\",\n                  marginRight: \"10px\",\n                  color: \"#551A8B\",\n                }}\n              >\n                <span className=\"octicon octicon-repo-forked\">\n                  {repo.forks_count}\n                </span>\n              </a>\n            </React.Fragment>\n          ) : null}\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default RepoCard;","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/paperCard.js",["135"],"import React from \"react\";\nimport {\n  makeStyles,\n  Card,\n  CardHeader,\n  CardContent,\n  CardMedia,\n  Avatar,\n  Typography,\n  Grid,\n} from \"@material-ui/core\";\nimport { green, blue, purple } from \"@material-ui/core/colors\";\nimport IconButton from '@material-ui/core/IconButton';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 0,\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    display: \"flex\",\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  card: {\n    width: \"100%\",\n    height: \"100%\",\n    marginLeft: \"15px\",\n    marginRight: \"15px\",\n    margin: \"auto\",\n    transition: \"0.3s\",\n    minHeight: \"270px\",\n    borderRadius: \".625rem!important\",\n    boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.3)\",\n    \"&:hover\": {\n      boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\",\n    },\n  },\n  tittle: {\n    \"&:active\": {\n      color: \"#00008E\",\n    },\n  },\n  cardContent: {\n    minHeight: \"120px\",\n  },\n  cardActions: {\n    padding: \"16px\",\n  },\n  avatar: {\n    color: theme.palette.getContrastText(purple[500]),\n    backgroundColor: blue[500],\n  },\n  dot: {\n    height: \"12px\",\n    width: \"12px\",\n    borderRadius: \"50%\",\n    display: \"inline-block\",\n  },\n}));\n\nconst PaperCard = ({ paper }) => {\n  const classes = useStyles();\n  return (\n    <Grid xs={12} sm={6} lg={3} className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              <span\n                className=\"fab fa-researchgate\"\n                style={{ fontSize: \"20px\" }}\n              ></span>\n            </Avatar>\n          }\n          title={\n            <Typography variant=\"h6\">\n              \n                {paper.name}\n                {\" \"}\n            </Typography>\n          }\n          action={\n            <IconButton aria-label=\"settings\" style={{ color: \"black\" }}>\n              <a href={paper.pdf} download = {paper.name} style={{ color: \"black\" }}>\n                <GetAppIcon />\n              </a>\n            </IconButton>\n          }\n        />\n        <a\n        href={paper.html_url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className={classes.tittle}\n        style={{ textDecoration: \"none\", color: \"black\" }}\n        >\n        <CardMedia\n            className={classes.media}\n            image={paper.image}\n            title={paper.name}\n        />\n        </a>\n        <a\n        href={paper.html_url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className={classes.tittle}\n        style={{ textDecoration: \"none\", color: \"black\" }}\n        >\n        <CardContent className={classes.cardContent}>\n          <Typography variant=\"body1\">{paper.description}</Typography>\n        </CardContent>\n        </a>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default PaperCard;","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/AwardCard.js",["136","137","138"],"import React from \"react\";\nimport {\n  makeStyles,\n  Card,\n  CardHeader,\n  CardContent,\n  CardMedia,\n  Avatar,\n  Typography,\n  Grid,\n} from \"@material-ui/core\";\nimport { green, blue, purple } from \"@material-ui/core/colors\";\nimport IconButton from '@material-ui/core/IconButton';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 0,\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    display: \"flex\",\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  card: {\n    width: \"100%\",\n    height: \"100%\",\n    marginLeft: \"15px\",\n    marginRight: \"15px\",\n    margin: \"auto\",\n    transition: \"0.3s\",\n    minHeight: \"270px\",\n    borderRadius: \".625rem!important\",\n    boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.3)\",\n    \"&:hover\": {\n      boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\",\n    },\n  },\n  tittle: {\n    \"&:active\": {\n      color: \"#00008E\",\n    },\n  },\n  cardContent: {\n    minHeight: \"120px\",\n  },\n  cardActions: {\n    padding: \"16px\",\n  },\n  avatar: {\n    color: theme.palette.getContrastText(purple[500]),\n    backgroundColor: blue[500],\n  },\n  dot: {\n    height: \"12px\",\n    width: \"12px\",\n    borderRadius: \"50%\",\n    display: \"inline-block\",\n  },\n}));\n\nconst AwardCard = ({ award }) => {\n  const classes = useStyles();\n  return (\n    <Grid xs={12} sm={6} lg={3} className={classes.root}>\n      <Card className={classes.card}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              <span\n                className=\"fas fa-award\"\n                style={{ fontSize: \"20px\" }}\n              ></span>\n            </Avatar>\n          }\n          title={\n            <Typography variant=\"h6\">\n              \n                {award.name}\n                {\" \"}\n            </Typography>\n          }\n        />\n        <a\n        href={award.html_url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className={classes.tittle}\n        style={{ textDecoration: \"none\", color: \"black\" }}\n        >\n        <CardMedia\n            className={classes.media}\n            image={award.image}\n            title={award.name}\n        />\n        </a>\n        <a\n        href={award.html_url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className={classes.tittle}\n        style={{ textDecoration: \"none\", color: \"black\" }}\n        >\n        <CardContent className={classes.cardContent}>\n          <Typography variant=\"body1\">{award.description}</Typography>\n        </CardContent>\n        </a>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default AwardCard;","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/SkillsList.js",["139","140","141","142"],"import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport {\n  Grid,\n} from '@material-ui/core/'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    backgroundColor: \"#0\",\n    boxShadow: \"0 6px 30px -10px rgba(0,0,0,0.3)\",\n    \"&:hover\": {\n      boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.3)\",\n    }\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nfunction SkillItem(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Grid item key={props.index}>\n      <Card className={classes.root}>\n        <CardHeader\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n          \n          avatar={\n            <figure class=\"image is-48x48\">\n              <img class=\"is-square\" src={props.icon}/>\n            </figure>\n          }\n          title={\n            <p>{props.name}</p>\n          }\n        />\n        {/* <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <p>{props.use}</p>\n          </CardContent>\n        </Collapse> */}\n      </Card>\n    </Grid>\n  );\n}\n\nexport default SkillItem;","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/HTimeline.js",["143","144","145","146","147"],"import React from \"react\";\nimport HorizontalTimeline from \"react-horizontal-timeline\";\nimport Resume from \"../../resume.json\"\nimport AwardCard from \"../elements/AwardCard\"\n\nexport default class Timeline extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      curIdx: 0,\n      prevIdx: -1\n    };\n  }\n\n  //state = { value: 0, previous: 0 };\n\n  render() {\n    const { curIdx } = this.state;\n    const currDescription = Resume.Awards[curIdx].description;\n    const currName = Resume.Awards[curIdx].name;\n    const currUrl = Resume.Awards[curIdx].html_url;\n    const currImage = Resume.Awards[curIdx].image;\n    return (\n      <div className=\"is-centered\">\n        {/* Bounding box for the Timeline */}\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100px\",\n            margin: \"0 auto\",\n            marginTop: \"20px\",\n            fontSize: \"15px\"\n          }}\n        >\n            <HorizontalTimeline\n            styles={{\n                background: \"#f8f8f8\",\n                foreground: \"#1A79AD\",\n                outline: \"#dfdfdf\"\n            }}\n            index={this.state.curIdx}\n            indexClick={index => {\n                const curIdx = this.state.curIdx;\n                this.setState({ curIdx: index });\n            }}\n            values={Resume.Awards.map(x => x.date)}\n            />\n        </div>\n        <br></br>\n        <div className=\"columns is-centered\">\n        {/* any arbitrary component can go here */}\n        {/* {currDescription}\n        {currName}\n        {currUrl}\n        {currImage} */}\n        <AwardCard award={Resume.Awards[curIdx]} />\n        </div>\n      </div>\n    );\n  }\n}\n","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/MenuItem.js",[],"/home/dhruva/DhruvaBansal00.github.io/src/components/elements/TimelineItem.js",["148","149"],"import React from \"react\";\nimport Badge from \"../elements/Badge\";\nimport TimelineContent from \"./TimelineContent\";\nimport Resume from \"../../resume.json\";\n\nfunction dates(props) {\n  if (props.endDate === 'None') {\n    return <p className=\"heading\">{props.date}</p>;\n  } else {\n    return <p className=\"heading\">{props.date}-{props.endDate}</p>;\n  }\n}\n\nfunction TimelineItem(props) {\n  return (\n    <div className=\"timeline-item is-success\">\n      <div className=\"timeline-marker is-image is-48x48\">\n      <a href={props.website}>\n        <img src={props.image} alt=\"\" class=\"center\"/>\n      </a>\n      </div>\n      <div className=\"timeline-content\">\n        {dates(props)}\n        <h1 className=\"title is-4\">{props.company}</h1>\n        <p className=\"subtitle is-6\">{props.position}</p>\n        <div className={`field is-grouped ${props.expIndex % 2 != Resume.work.length % 2 && window.screen.width > 768 ? \"is-grouped-right\" : \"is-grouped-left\"} is-grouped-multiline`}>\n          {props.badge.map((value, index) => {\n            return (\n              <Badge key={index} text={value.name} faIcon={value.x_icon} leftTimeline={props.expIndex % 2 != Resume.work.length % 2 && window.screen.width > 768}/>\n            )\n          })}\n        </div>\n        <TimelineContent\n          summary={props.summary}\n          summary1={props.summary1}\n          summary2={props.summary2}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default TimelineItem;\n","/home/dhruva/DhruvaBansal00.github.io/src/components/elements/TimelineHeader.js",[],"/home/dhruva/DhruvaBansal00.github.io/src/components/elements/TimelineContent.js",["150"],"import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Badge from \"../elements/Badge\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 750,\n    backgroundColor: \"#0\",\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  }\n}));\n\nfunction TimelineContent(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={classes.root} elevation={0}>\n    <p onClick={handleExpandClick}\n        aria-expanded={expanded}\n        aria-label=\"show more\">{props.summary}</p>\n    {props.summary1.length > 0 &&\n    <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n        <ExpandMoreIcon />\n    </IconButton>}\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        {props.summary1.length > 0 && <p>{props.summary1}</p>}\n        {props.summary2.length > 0 && <br></br>}\n        {props.summary2.length > 0 && <p>{props.summary2}</p>}\n    </Collapse>\n    </Card>\n  );\n}\n\nexport default TimelineContent;",{"ruleId":"151","severity":1,"message":"152","line":2,"column":8,"nodeType":"153","messageId":"154","endLine":2,"endColumn":17},{"ruleId":"151","severity":1,"message":"155","line":3,"column":8,"nodeType":"153","messageId":"154","endLine":3,"endColumn":23},{"ruleId":"151","severity":1,"message":"152","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":17},{"ruleId":"151","severity":1,"message":"155","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":23},{"ruleId":"156","severity":1,"message":"157","line":17,"column":13,"nodeType":"158","endLine":17,"endColumn":138},{"ruleId":"151","severity":1,"message":"159","line":4,"column":9,"nodeType":"153","messageId":"154","endLine":4,"endColumn":17},{"ruleId":"151","severity":1,"message":"160","line":8,"column":8,"nodeType":"153","messageId":"154","endLine":8,"endColumn":16},{"ruleId":"151","severity":1,"message":"161","line":1,"column":10,"nodeType":"153","messageId":"154","endLine":1,"endColumn":19},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"151","severity":1,"message":"166","line":12,"column":10,"nodeType":"153","messageId":"154","endLine":12,"endColumn":15},{"ruleId":"151","severity":1,"message":"166","line":12,"column":10,"nodeType":"153","messageId":"154","endLine":12,"endColumn":15},{"ruleId":"151","severity":1,"message":"166","line":12,"column":10,"nodeType":"153","messageId":"154","endLine":12,"endColumn":15},{"ruleId":"151","severity":1,"message":"167","line":13,"column":8,"nodeType":"153","messageId":"154","endLine":13,"endColumn":18},{"ruleId":"151","severity":1,"message":"168","line":14,"column":8,"nodeType":"153","messageId":"154","endLine":14,"endColumn":18},{"ruleId":"151","severity":1,"message":"169","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":19},{"ruleId":"151","severity":1,"message":"170","line":6,"column":8,"nodeType":"153","messageId":"154","endLine":6,"endColumn":16},{"ruleId":"151","severity":1,"message":"171","line":7,"column":8,"nodeType":"153","messageId":"154","endLine":7,"endColumn":18},{"ruleId":"172","severity":1,"message":"173","line":59,"column":15,"nodeType":"158","endLine":59,"endColumn":56},{"ruleId":"151","severity":1,"message":"174","line":19,"column":11,"nodeType":"153","messageId":"154","endLine":19,"endColumn":26},{"ruleId":"151","severity":1,"message":"175","line":20,"column":11,"nodeType":"153","messageId":"154","endLine":20,"endColumn":19},{"ruleId":"151","severity":1,"message":"176","line":21,"column":11,"nodeType":"153","messageId":"154","endLine":21,"endColumn":18},{"ruleId":"151","severity":1,"message":"177","line":22,"column":11,"nodeType":"153","messageId":"154","endLine":22,"endColumn":20},{"ruleId":"151","severity":1,"message":"178","line":43,"column":23,"nodeType":"153","messageId":"154","endLine":43,"endColumn":29},{"ruleId":"179","severity":1,"message":"180","line":26,"column":64,"nodeType":"181","messageId":"182","endLine":26,"endColumn":66},{"ruleId":"179","severity":1,"message":"180","line":29,"column":107,"nodeType":"181","messageId":"182","endLine":29,"endColumn":109},{"ruleId":"151","severity":1,"message":"183","line":8,"column":8,"nodeType":"153","messageId":"154","endLine":8,"endColumn":13},"no-unused-vars","'Particles' is defined but never used.","Identifier","unusedVar","'particlesConfig' is defined but never used.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","'Carousel' is defined but never used.","'Timeline' is defined but never used.","'Autorenew' is defined but never used.","no-native-reassign",["184"],"no-negated-in-lhs",["185"],"'green' is defined but never used.","'IconButton' is defined but never used.","'GetAppIcon' is defined but never used.","'CardContent' is defined but never used.","'Collapse' is defined but never used.","'Typography' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'currDescription' is assigned a value but never used.","'currName' is assigned a value but never used.","'currUrl' is assigned a value but never used.","'currImage' is assigned a value but never used.","'curIdx' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Badge' is defined but never used.","no-global-assign","no-unsafe-negation"]